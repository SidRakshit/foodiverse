{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/Player.ts"],"sourcesContent":["import InputHandler from './InputHandler';\nimport { Scene } from './types';\n\nclass Player {\n  public x: number;\n  public y: number;\n  public width: number = 16;\n  public height: number = 16;\n  private speed: number = 120; // pixels per second\n  private direction: 'down' | 'up' | 'left' | 'right' = 'down';\n  private animationFrame: number = 0;\n  private animationTimer: number = 0;\n  private animationSpeed: number = 200; // ms per frame\n  private isMoving: boolean = false;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  update(deltaTime: number, inputHandler: InputHandler, scene: Scene): void {\n    let newX = this.x;\n    let newY = this.y;\n    this.isMoving = false;\n\n    // Handle movement input\n    if (inputHandler.isKeyPressed('ArrowUp') || inputHandler.isKeyPressed('KeyW')) {\n      newY -= (this.speed * deltaTime) / 1000;\n      this.direction = 'up';\n      this.isMoving = true;\n    }\n    if (inputHandler.isKeyPressed('ArrowDown') || inputHandler.isKeyPressed('KeyS')) {\n      newY += (this.speed * deltaTime) / 1000;\n      this.direction = 'down';\n      this.isMoving = true;\n    }\n    if (inputHandler.isKeyPressed('ArrowLeft') || inputHandler.isKeyPressed('KeyA')) {\n      newX -= (this.speed * deltaTime) / 1000;\n      this.direction = 'left';\n      this.isMoving = true;\n    }\n    if (inputHandler.isKeyPressed('ArrowRight') || inputHandler.isKeyPressed('KeyD')) {\n      newX += (this.speed * deltaTime) / 1000;\n      this.direction = 'right';\n      this.isMoving = true;\n    }\n\n    // Check collision with scene boundaries and obstacles\n    if (this.canMoveTo(newX, newY, scene)) {\n      this.x = newX;\n      this.y = newY;\n    }\n    // Movement is blocked if canMoveTo returns false - don't update position\n\n    // Update animation\n    if (this.isMoving) {\n      this.animationTimer += deltaTime;\n      if (this.animationTimer >= this.animationSpeed) {\n        this.animationFrame = (this.animationFrame + 1) % 2; // 2 frame walk cycle\n        this.animationTimer = 0;\n      }\n    } else {\n      this.animationFrame = 0; // Reset to idle frame\n    }\n  }\n\n  private canMoveTo(x: number, y: number, scene: Scene): boolean {\n    // Check scene boundaries (world is now 800x1216 pixels - two full screens stacked)\n    if (x < 0 || y < 0 || x + this.width > 800 || y + this.height > 1216) {\n      console.log('Movement blocked by world boundaries:', { x, y, worldBounds: [800, 1216] });\n      return false;\n    }\n\n    return true;\n\n    // Temporarily disable scene collision to test\n    // try {\n    //   const canMove = scene.canMoveTo(x, y, this.width, this.height);\n    //   if (!canMove) {\n    //     console.log('Movement blocked by scene collision:', { x, y, sceneType: scene.type });\n    //   }\n    //   return canMove;\n    // } catch (error) {\n    //   console.error('Error in scene collision detection:', error);\n    //   // If there's an error, allow movement to avoid getting stuck\n    //   return true;\n    // }\n  }\n\n  render(ctx: CanvasRenderingContext2D, cameraX: number = 0, cameraY: number = 0): void {\n    // Create a simple pixel-art character\n    const scale = 2; // Scale up for visibility\n    \n    // Calculate screen position relative to camera\n    const screenX = this.x - cameraX;\n    const screenY = this.y - cameraY;\n    \n    ctx.save();\n    ctx.scale(scale, scale);\n    \n    const drawX = Math.floor(screenX / scale);\n    const drawY = Math.floor(screenY / scale);\n\n    // Draw character body (simple 8x8 sprite)\n    this.drawPixelArtCharacter(ctx, drawX, drawY, this.direction, this.animationFrame);\n    \n    ctx.restore();\n  }\n\n  private drawPixelArtCharacter(\n    ctx: CanvasRenderingContext2D, \n    x: number, \n    y: number, \n    direction: string, \n    frame: number\n  ): void {\n    const pixelSize = 1;\n    \n    // Define character colors\n    const skinColor = '#FFDBAC';\n    const shirtColor = '#FF6B6B';\n    const pantsColor = '#4ECDC4';\n    const hairColor = '#8B4513';\n    const shadowColor = 'rgba(0,0,0,0.3)';\n\n    // Draw shadow\n    ctx.fillStyle = shadowColor;\n    ctx.fillRect(x, y + 7, 8, 1);\n\n    // Character sprite data (8x8 pixels)\n    const spriteData = this.getCharacterSprite(direction, frame);\n    \n    // Draw the character pixel by pixel\n    for (let row = 0; row < 8; row++) {\n      for (let col = 0; col < 8; col++) {\n        const pixel = spriteData[row][col];\n        if (pixel !== 0) {\n          ctx.fillStyle = this.getPixelColor(pixel);\n          ctx.fillRect(x + col, y + row, pixelSize, pixelSize);\n        }\n      }\n    }\n  }\n\n  private getCharacterSprite(direction: string, frame: number): number[][] {\n    // Simplified sprite data where:\n    // 0 = transparent, 1 = hair, 2 = skin, 3 = shirt, 4 = pants\n    \n    const baseSprite = [\n      [0, 1, 1, 1, 1, 1, 1, 0], // Hair\n      [1, 2, 2, 2, 2, 2, 2, 1], // Head\n      [0, 2, 2, 2, 2, 2, 2, 0], // Face\n      [0, 3, 3, 3, 3, 3, 3, 0], // Shirt\n      [0, 3, 3, 3, 3, 3, 3, 0], // Shirt\n      [0, 4, 4, 4, 4, 4, 4, 0], // Pants\n      [0, 4, 4, 0, 0, 4, 4, 0], // Legs\n      [0, 2, 2, 0, 0, 2, 2, 0], // Feet\n    ];\n\n    // Add simple animation for walking\n    if (frame === 1 && direction !== 'up') {\n      // Slightly offset legs for walking animation\n      baseSprite[6] = [0, 4, 0, 4, 4, 0, 4, 0];\n      baseSprite[7] = [0, 2, 0, 2, 2, 0, 2, 0];\n    }\n\n    return baseSprite;\n  }\n\n  private getPixelColor(pixelType: number): string {\n    switch (pixelType) {\n      case 1: return '#8B4513'; // Hair (brown)\n      case 2: return '#FFDBAC'; // Skin\n      case 3: return '#FF6B6B'; // Shirt (red)\n      case 4: return '#4ECDC4'; // Pants (teal)\n      default: return 'transparent';\n    }\n  }\n\n  // Getter methods for collision detection\n  public getLeft(): number { return this.x; }\n  public getRight(): number { return this.x + this.width; }\n  public getTop(): number { return this.y; }\n  public getBottom(): number { return this.y + this.height; }\n}\n\nexport default Player;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/InputHandler.ts"],"sourcesContent":["class InputHandler {\n  private keys: Set<string> = new Set();\n  private keyPressed: Set<string> = new Set();\n  private keyReleased: Set<string> = new Set();\n\n  constructor() {\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    \n    // Add event listeners\n    if (typeof window !== 'undefined') {\n      window.addEventListener('keydown', this.handleKeyDown);\n      window.addEventListener('keyup', this.handleKeyUp);\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent): void {\n    const key = event.code;\n    \n    // Debug ESC key presses\n    if (key === 'Escape') {\n      console.log('🔑 ESC key detected in InputHandler');\n    }\n    \n    // Prevent default behavior for game keys\n    if (this.isGameKey(key)) {\n      event.preventDefault();\n    }\n\n    if (!this.keys.has(key)) {\n      this.keys.add(key);\n      this.keyPressed.add(key);\n    }\n  }\n\n  private handleKeyUp(event: KeyboardEvent): void {\n    const key = event.code;\n    \n    if (this.keys.has(key)) {\n      this.keys.delete(key);\n      this.keyReleased.add(key);\n    }\n  }\n\n  private isGameKey(key: string): boolean {\n    const gameKeys = [\n      'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight',\n      'KeyW', 'KeyA', 'KeyS', 'KeyD',\n      'Space', 'Enter', 'Escape'\n    ];\n    return gameKeys.includes(key);\n  }\n\n  public isKeyPressed(key: string): boolean {\n    return this.keys.has(key);\n  }\n\n  public wasKeyJustPressed(key: string): boolean {\n    return this.keyPressed.has(key);\n  }\n\n  public wasKeyJustReleased(key: string): boolean {\n    return this.keyReleased.has(key);\n  }\n\n  public update(): void {\n    // Clear frame-specific key states\n    this.keyPressed.clear();\n    this.keyReleased.clear();\n  }\n\n  public destroy(): void {\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('keydown', this.handleKeyDown);\n      window.removeEventListener('keyup', this.handleKeyUp);\n    }\n    this.keys.clear();\n    this.keyPressed.clear();\n    this.keyReleased.clear();\n  }\n}\n\nexport default InputHandler;\n"],"names":[],"mappings":";;;;AAAA,MAAM;IACI,OAAoB,IAAI,MAAM;IAC9B,aAA0B,IAAI,MAAM;IACpC,cAA2B,IAAI,MAAM;IAE7C,aAAc;QACZ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI;QACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI;QAE7C,sBAAsB;QACtB;;IAIF;IAEQ,cAAc,KAAoB,EAAQ;QAChD,MAAM,MAAM,MAAM,IAAI;QAEtB,wBAAwB;QACxB,IAAI,QAAQ,UAAU;YACpB,QAAQ,GAAG,CAAC;QACd;QAEA,yCAAyC;QACzC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM;YACvB,MAAM,cAAc;QACtB;QAEA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM;YACvB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACd,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;QACtB;IACF;IAEQ,YAAY,KAAoB,EAAQ;QAC9C,MAAM,MAAM,MAAM,IAAI;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM;YACtB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACjB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;QACvB;IACF;IAEQ,UAAU,GAAW,EAAW;QACtC,MAAM,WAAW;YACf;YAAW;YAAa;YAAa;YACrC;YAAQ;YAAQ;YAAQ;YACxB;YAAS;YAAS;SACnB;QACD,OAAO,SAAS,QAAQ,CAAC;IAC3B;IAEO,aAAa,GAAW,EAAW;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;IACvB;IAEO,kBAAkB,GAAW,EAAW;QAC7C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;IAC7B;IAEO,mBAAmB,GAAW,EAAW;QAC9C,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;IAC9B;IAEO,SAAe;QACpB,kCAAkC;QAClC,IAAI,CAAC,UAAU,CAAC,KAAK;QACrB,IAAI,CAAC,WAAW,CAAC,KAAK;IACxB;IAEO,UAAgB;QACrB;;QAIA,IAAI,CAAC,IAAI,CAAC,KAAK;QACf,IAAI,CAAC,UAAU,CAAC,KAAK;QACrB,IAAI,CAAC,WAAW,CAAC,KAAK;IACxB;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/BaseArea.ts"],"sourcesContent":["import Player from './Player';\nimport { Scene, SceneType } from './types';\n\ninterface AreaTile {\n  type: 'floor' | 'wall' | 'door' | 'furniture' | 'window' | 'stairs' | 'elevator' | 'grass' | 'road' | 'sidewalk' | 'building' | 'parking' | 'stone' | 'water' | 'tree' | 'sand' | 'flower' | 'path' | 'bench' | 'fountain' | 'house' | 'apartment' | 'restaurant' | 'shop';\n  solid: boolean;\n  furniture?: 'desk' | 'chair' | 'bookshelf' | 'computer' | 'table' | 'couch' | 'plant' | 'car' | 'bench';\n  buildingType?: string;\n  sprite?: number[][];\n}\n\nabstract class BaseArea implements Scene {\n  public abstract type: SceneType;\n  protected tileSize: number = 32;\n  protected areaWidth: number = 25; // tiles\n  protected areaHeight: number = 19; // tiles\n  protected tiles: AreaTile[][];\n  public cameraX: number = 0;\n  public cameraY: number = 0;\n  protected exitX: number = 400; // Default exit position\n  protected exitY: number = 450;\n\n  constructor() {\n    this.tiles = this.generateArea();\n  }\n\n  protected abstract generateArea(): AreaTile[][];\n  protected abstract getAreaName(): string;\n\n  public canMoveTo(x: number, y: number, width: number, height: number): boolean {\n    // Convert pixel coordinates to tile coordinates\n    const leftTile = Math.floor(x / this.tileSize);\n    const rightTile = Math.floor((x + width - 1) / this.tileSize);\n    const topTile = Math.floor(y / this.tileSize);\n    const bottomTile = Math.floor((y + height - 1) / this.tileSize);\n\n    // Check all tiles that the entity overlaps\n    for (let tileY = topTile; tileY <= bottomTile; tileY++) {\n      for (let tileX = leftTile; tileX <= rightTile; tileX++) {\n        if (this.isTileSolid(tileX, tileY)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  private isTileSolid(tileX: number, tileY: number): boolean {\n    // Check bounds\n    if (tileX < 0 || tileX >= this.areaWidth || tileY < 0 || tileY >= this.areaHeight) {\n      return true; // Treat out-of-bounds as solid\n    }\n\n    return this.tiles[tileY][tileX].solid;\n  }\n\n  public update(deltaTime: number): void {\n    // Base update logic - can be overridden\n  }\n\n  public render(ctx: CanvasRenderingContext2D, player: Player): void {\n    // Update camera\n    this.updateCamera(player);\n\n    // Clear with appropriate background\n    this.renderBackground(ctx);\n\n    // Render visible tiles\n    const startTileX = Math.max(0, Math.floor(this.cameraX / this.tileSize));\n    const endTileX = Math.min(this.areaWidth - 1, Math.floor((this.cameraX + 800) / this.tileSize));\n    const startTileY = Math.max(0, Math.floor(this.cameraY / this.tileSize));\n    const endTileY = Math.min(this.areaHeight - 1, Math.floor((this.cameraY + 600) / this.tileSize));\n\n    for (let tileY = startTileY; tileY <= endTileY; tileY++) {\n      for (let tileX = startTileX; tileX <= endTileX; tileX++) {\n        const tile = this.tiles[tileY][tileX];\n        const x = tileX * this.tileSize - this.cameraX;\n        const y = tileY * this.tileSize - this.cameraY;\n\n        this.renderTile(ctx, tile, x, y);\n      }\n    }\n\n    // Render area-specific elements\n    this.renderAreaSpecificElements(ctx);\n  }\n\n  protected abstract renderBackground(ctx: CanvasRenderingContext2D): void;\n  protected abstract renderAreaSpecificElements(ctx: CanvasRenderingContext2D): void;\n\n  protected updateCamera(player: Player): void {\n    // Keep camera centered on player, but don't go outside area bounds\n    const targetCameraX = player.x - 400 + player.width / 2;\n    const targetCameraY = player.y - 300 + player.height / 2;\n\n    const maxCameraX = this.areaWidth * this.tileSize - 800;\n    const maxCameraY = this.areaHeight * this.tileSize - 600;\n\n    this.cameraX = Math.max(0, Math.min(maxCameraX, targetCameraX));\n    this.cameraY = Math.max(0, Math.min(maxCameraY, targetCameraY));\n  }\n\n  protected renderTile(ctx: CanvasRenderingContext2D, tile: AreaTile, x: number, y: number): void {\n    switch (tile.type) {\n      case 'grass':\n        this.renderGrassTile(ctx, x, y);\n        break;\n      case 'road':\n        this.renderRoadTile(ctx, x, y);\n        break;\n      case 'sidewalk':\n        this.renderSidewalkTile(ctx, x, y);\n        break;\n      case 'building':\n        this.renderBuildingTile(ctx, tile, x, y);\n        break;\n      case 'door':\n        this.renderDoorTile(ctx, tile, x, y);\n        break;\n      case 'parking':\n        this.renderParkingTile(ctx, x, y);\n        break;\n      case 'floor':\n        this.renderFloorTile(ctx, x, y);\n        break;\n      case 'wall':\n        this.renderWallTile(ctx, x, y);\n        break;\n      case 'furniture':\n        this.renderFurnitureTile(ctx, tile, x, y);\n        break;\n      case 'tree':\n        this.renderTreeTile(ctx, x, y);\n        break;\n      case 'path':\n        this.renderPathTile(ctx, x, y);\n        break;\n      case 'bench':\n        this.renderBenchTile(ctx, x, y);\n        break;\n      case 'fountain':\n        this.renderFountainTile(ctx, x, y);\n        break;\n      case 'flower':\n        this.renderFlowerTile(ctx, x, y);\n        break;\n      case 'stone':\n        this.renderStoneTile(ctx, x, y);\n        break;\n      case 'water':\n        this.renderWaterTile(ctx, x, y);\n        break;\n      case 'sand':\n        this.renderSandTile(ctx, x, y);\n        break;\n      case 'house':\n        this.renderHouseTile(ctx, tile, x, y);\n        break;\n      case 'apartment':\n        this.renderApartmentTile(ctx, tile, x, y);\n        break;\n      case 'restaurant':\n        this.renderRestaurantTile(ctx, tile, x, y);\n        break;\n      case 'shop':\n        this.renderShopTile(ctx, tile, x, y);\n        break;\n    }\n  }\n\n  // Base tile rendering methods that can be overridden\n  protected renderGrassTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    ctx.fillStyle = '#4a7c59';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    \n    ctx.fillStyle = '#5a8c69';\n    for (let i = 0; i < 8; i++) {\n      const px = x + Math.floor(Math.random() * this.tileSize);\n      const py = y + Math.floor(Math.random() * this.tileSize);\n      ctx.fillRect(px, py, 2, 2);\n    }\n  }\n\n  protected renderRoadTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    ctx.fillStyle = '#2F2F2F';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    \n    // Road markings\n    ctx.fillStyle = '#FFFF00';\n    ctx.fillRect(x, y + 14, this.tileSize, 2);\n  }\n\n  protected renderSidewalkTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    ctx.fillStyle = '#D3D3D3';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    \n    // Sidewalk pattern\n    ctx.fillStyle = '#C0C0C0';\n    ctx.fillRect(x + 2, y + 2, this.tileSize - 4, this.tileSize - 4);\n  }\n\n  protected renderBuildingTile(ctx: CanvasRenderingContext2D, tile: AreaTile, x: number, y: number): void {\n    // Default building appearance\n    ctx.fillStyle = '#8B4513';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n  }\n\n  protected renderDoorTile(ctx: CanvasRenderingContext2D, tile: AreaTile, x: number, y: number): void {\n    // Default door appearance\n    ctx.fillStyle = '#654321';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n  }\n\n  protected renderParkingTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    ctx.fillStyle = '#2F2F2F';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    \n    ctx.fillStyle = '#FFFF00';\n    ctx.fillRect(x, y + 14, this.tileSize, 2);\n    ctx.fillRect(x + 14, y, 2, this.tileSize);\n  }\n\n  protected renderFloorTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    ctx.fillStyle = '#DEB887';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n  }\n\n  protected renderWallTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    ctx.fillStyle = '#F5F5DC';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n  }\n\n  protected renderFurnitureTile(ctx: CanvasRenderingContext2D, tile: AreaTile, x: number, y: number): void {\n    // Base furniture rendering\n    ctx.fillStyle = '#8B4513';\n    ctx.fillRect(x + 4, y + 4, this.tileSize - 8, this.tileSize - 8);\n  }\n\n  protected renderTreeTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Tree trunk\n    ctx.fillStyle = '#8B4513';\n    ctx.fillRect(x + 12, y + 20, 8, 12);\n    // Tree foliage\n    ctx.fillStyle = '#228B22';\n    ctx.beginPath();\n    ctx.arc(x + 16, y + 16, 12, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n\n  protected renderPathTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    ctx.fillStyle = '#D2B48C';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    // Path texture\n    ctx.fillStyle = '#DEB887';\n    ctx.fillRect(x + 2, y + 2, this.tileSize - 4, this.tileSize - 4);\n  }\n\n  protected renderBenchTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Bench base\n    ctx.fillStyle = '#8B4513';\n    ctx.fillRect(x + 4, y + 16, 24, 8);\n    // Bench back\n    ctx.fillRect(x + 4, y + 8, 4, 16);\n    ctx.fillRect(x + 24, y + 8, 4, 16);\n  }\n\n  protected renderFountainTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Fountain base\n    ctx.fillStyle = '#D3D3D3';\n    ctx.beginPath();\n    ctx.arc(x + 16, y + 16, 14, 0, 2 * Math.PI);\n    ctx.fill();\n    // Water\n    ctx.fillStyle = '#4169E1';\n    ctx.beginPath();\n    ctx.arc(x + 16, y + 16, 10, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n\n  protected renderFlowerTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Grass base\n    this.renderGrassTile(ctx, x, y);\n    // Flowers\n    ctx.fillStyle = '#FF69B4';\n    ctx.beginPath();\n    ctx.arc(x + 8, y + 8, 3, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.fillStyle = '#FFD700';\n    ctx.beginPath();\n    ctx.arc(x + 20, y + 20, 3, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n\n  protected renderStoneTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    ctx.fillStyle = '#708090';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    // Stone texture\n    ctx.fillStyle = '#778899';\n    ctx.fillRect(x + 2, y + 2, this.tileSize - 4, this.tileSize - 4);\n  }\n\n  protected renderWaterTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    ctx.fillStyle = '#4169E1';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    // Water ripples\n    ctx.fillStyle = '#6495ED';\n    ctx.fillRect(x + 4, y + 4, this.tileSize - 8, this.tileSize - 8);\n  }\n\n  protected renderSandTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    ctx.fillStyle = '#F4A460';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    // Sand texture\n    ctx.fillStyle = '#DEB887';\n    for (let i = 0; i < 6; i++) {\n      const px = x + Math.floor(Math.random() * this.tileSize);\n      const py = y + Math.floor(Math.random() * this.tileSize);\n      ctx.fillRect(px, py, 1, 1);\n    }\n  }\n\n  protected renderHouseTile(ctx: CanvasRenderingContext2D, tile: AreaTile, x: number, y: number): void {\n    // House building\n    ctx.fillStyle = '#D2691E';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    // Roof\n    ctx.fillStyle = '#8B4513';\n    ctx.fillRect(x, y, this.tileSize, 8);\n  }\n\n  protected renderApartmentTile(ctx: CanvasRenderingContext2D, tile: AreaTile, x: number, y: number): void {\n    // Apartment building\n    ctx.fillStyle = '#708090';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    // Windows\n    ctx.fillStyle = '#87CEEB';\n    ctx.fillRect(x + 4, y + 4, 6, 6);\n    ctx.fillRect(x + 22, y + 4, 6, 6);\n    ctx.fillRect(x + 4, y + 22, 6, 6);\n    ctx.fillRect(x + 22, y + 22, 6, 6);\n  }\n\n  protected renderRestaurantTile(ctx: CanvasRenderingContext2D, tile: AreaTile, x: number, y: number): void {\n    // Restaurant building\n    ctx.fillStyle = '#CD853F';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    // Sign\n    ctx.fillStyle = '#FF6347';\n    ctx.fillRect(x + 8, y + 4, 16, 8);\n  }\n\n  protected renderShopTile(ctx: CanvasRenderingContext2D, tile: AreaTile, x: number, y: number): void {\n    // Shop building\n    ctx.fillStyle = '#DDA0DD';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    // Store front\n    ctx.fillStyle = '#FFD700';\n    ctx.fillRect(x + 4, y + 16, 24, 12);\n  }\n\n  public getEntrancePosition(): { x: number, y: number } {\n    return { x: this.exitX, y: this.exitY };\n  }\n\n  // Method to get tile information for scene transitions\n  public getTileAt(tileX: number, tileY: number): AreaTile | null {\n    if (tileX < 0 || tileX >= this.areaWidth || tileY < 0 || tileY >= this.areaHeight) {\n      return null;\n    }\n    return this.tiles[tileY][tileX];\n  }\n}\n\nexport default BaseArea;\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/campus/CampusArea.ts"],"sourcesContent":["import BaseArea from '../BaseArea';\nimport { SceneType } from '../types';\n\nclass CampusArea extends BaseArea {\n  public type: SceneType = 'campus';\n\n  protected getAreaName(): string {\n    return 'Virginia Tech Campus';\n  }\n\n  protected generateArea(): any[][] {\n    const area: any[][] = [];\n    \n    // Initialize with grass\n    for (let y = 0; y < this.areaHeight; y++) {\n      area[y] = [];\n      for (let x = 0; x < this.areaWidth; x++) {\n        area[y][x] = { type: 'grass', solid: false };\n      }\n    }\n\n    // Create campus layout - this represents the BOTTOM HALF of the world\n    this.generateCampusBuildings(area);\n    this.generateCampusPaths(area);\n    this.generateCampusFeatures(area);\n\n    return area;\n  }\n\n  private generateCampusBuildings(world: any[][]): void {\n    // Burruss Hall (iconic admin building with clock tower)\n    this.createBuilding(world, 10, 2, 5, 4, 'burruss');\n    \n    // Newman Library\n    this.createBuilding(world, 3, 2, 5, 4, 'newman');\n    \n    // Torgersen Hall (Engineering) - Large Gothic Revival building with bridge\n    this.createTorgersenHall(world, 16, 1, 8, 5);\n    \n    // War Memorial Chapel\n    this.createBuilding(world, 5, 8, 3, 3, 'war_memorial');\n    \n    // Squires Student Center\n    this.createBuilding(world, 12, 8, 5, 4, 'squires');\n    \n    // Owens Hall (Dining)\n    this.createBuilding(world, 1, 13, 6, 4, 'owens');\n    \n    // Cassell Coliseum\n    this.createBuilding(world, 18, 12, 6, 5, 'cassell');\n    \n    // Create the Drillfield (large open grass area)\n    this.createDrillfield(world, 8, 14, 8, 4);\n  }\n\n  private createBuilding(world: any[][], x: number, y: number, width: number, height: number, buildingType: string): void {\n    for (let by = y; by < y + height; by++) {\n      for (let bx = x; bx < x + width; bx++) {\n        if (bx < this.areaWidth && by < this.areaHeight) {\n          // Create doors on the front of buildings\n          if (by === y + height - 1 && bx === x + Math.floor(width / 2)) {\n            world[by][bx] = { type: 'door', solid: false, buildingType };\n          } else {\n            world[by][bx] = { type: 'building', solid: true, buildingType };\n          }\n        }\n      }\n    }\n  }\n\n  private createTorgersenHall(world: any[][], x: number, y: number, width: number, height: number): void {\n    // Create the main Gothic Revival structure with distinctive features\n    // Left wing: 3 tiles wide, 5 tiles tall\n    // Right wing: 3 tiles wide, 5 tiles tall\n    // Bridge: connects the wings at the top\n    \n    for (let by = y; by < y + height; by++) {\n      for (let bx = x; bx < x + width; bx++) {\n        if (bx < this.areaWidth && by < this.areaHeight) {\n          // Left wing of the building (3x5)\n          if (bx >= x && bx <= x + 2 && by >= y && by <= y + height - 1) {\n            if (by === y + height - 1 && bx === x + 1) {\n              world[by][bx] = { type: 'door', solid: false, buildingType: 'torgersen' };\n            } else {\n              world[by][bx] = { type: 'building', solid: true, buildingType: 'torgersen' };\n            }\n          }\n          // Right wing of the building (3x5)\n          else if (bx >= x + width - 3 && bx <= x + width - 1 && by >= y && by <= y + height - 1) {\n            if (by === y + height - 1 && bx === x + width - 2) {\n              world[by][bx] = { type: 'door', solid: false, buildingType: 'torgersen' };\n            } else {\n              world[by][bx] = { type: 'building', solid: true, buildingType: 'torgersen' };\n            }\n          }\n          // Bridge connection (arched walkway between wings) - 6 tiles wide, 2 tiles tall (twice as long)\n          else if (by >= y + 1 && by <= y + 2 && bx >= x + 1 && bx <= x + 6) {\n            world[by][bx] = { type: 'building', solid: true, buildingType: 'torgersen' };\n          }\n          // Central courtyard area under the bridge and open spaces\n          else if (by >= y + 3 && by <= y + height - 1 && bx >= x + 3 && bx <= x + width - 4) {\n            world[by][bx] = { type: 'grass', solid: false };\n          }\n          // Open area above bridge (1st row between wings)\n          else if (by === y && bx >= x + 3 && bx <= x + width - 4) {\n            world[by][bx] = { type: 'grass', solid: false };\n          }\n          // Main entrance under the bridge\n          else if (by === y + height - 1 && bx === x + Math.floor(width / 2)) {\n            world[by][bx] = { type: 'door', solid: false, buildingType: 'torgersen' };\n          }\n        }\n      }\n    }\n  }\n\n  private createDrillfield(world: any[][], x: number, y: number, width: number, height: number): void {\n    for (let dy = y; dy < y + height && dy < this.areaHeight; dy++) {\n      for (let dx = x; dx < x + width && dx < this.areaWidth; dx++) {\n        world[dy][dx] = { type: 'grass', solid: false, buildingType: 'drillfield' };\n      }\n    }\n  }\n\n  private generateCampusPaths(world: any[][]): void {\n    // Main campus walkway (horizontal)\n    for (let x = 0; x < this.areaWidth; x++) {\n      if (world[9][x].type === 'grass') {\n        world[9][x] = { type: 'path', solid: false };\n      }\n    }\n    \n    // Vertical paths connecting buildings\n    for (let y = 0; y < this.areaHeight; y++) {\n      // Path near library\n      if (world[y][5] && world[y][5].type === 'grass') {\n        world[y][5] = { type: 'path', solid: false };\n      }\n      // Path in center\n      if (world[y][12] && world[y][12].type === 'grass') {\n        world[y][12] = { type: 'path', solid: false };\n      }\n      // Path on right side\n      if (world[y][19] && world[y][19].type === 'grass') {\n        world[y][19] = { type: 'path', solid: false };\n      }\n    }\n\n    // Connecting paths to buildings\n    this.createPathToDoor(world, 5, 6, 'horizontal'); // To library\n    this.createPathToDoor(world, 11, 5, 'horizontal'); // To admin\n    this.createPathToDoor(world, 14, 9, 'vertical'); // To classroom\n    this.createPathToDoor(world, 19, 9, 'vertical'); // To classroom\n  }\n\n  private createPathToDoor(world: any[][], startX: number, startY: number, direction: 'horizontal' | 'vertical'): void {\n    if (direction === 'horizontal') {\n      for (let x = startX; x < startX + 3; x++) {\n        if (x < this.areaWidth && world[startY][x].type === 'grass') {\n          world[startY][x] = { type: 'path', solid: false };\n        }\n      }\n    } else {\n      for (let y = startY; y < startY + 3; y++) {\n        if (y < this.areaHeight && world[y][startX].type === 'grass') {\n          world[y][startX] = { type: 'path', solid: false };\n        }\n      }\n    }\n  }\n\n  private generateCampusFeatures(world: any[][]): void {\n    // Add trees around campus\n    this.addTrees(world, 10, 12, 2); // Near center\n    this.addTrees(world, 1, 15, 3); // Near cafeteria\n    this.addTrees(world, 22, 8, 2); // Right side\n    \n    // Add benches along paths\n    this.addBench(world, 6, 9);\n    this.addBench(world, 13, 9);\n    this.addBench(world, 18, 9);\n    \n    // Add campus fountain\n    if (world[11][10].type === 'grass') {\n      world[11][10] = { type: 'fountain', solid: true };\n    }\n    \n    // Add parking area\n    this.createParkingLot(world, 1, 1, 3, 2);\n    \n    // Add flowers around buildings\n    this.addFlowersAroundBuilding(world, 3, 2, 5, 4); // Around library\n    this.addFlowersAroundBuilding(world, 9, 2, 4, 3); // Around admin\n  }\n\n  private addTrees(world: any[][], centerX: number, centerY: number, count: number): void {\n    for (let i = 0; i < count; i++) {\n      const x = centerX + (Math.random() - 0.5) * 4;\n      const y = centerY + (Math.random() - 0.5) * 4;\n      const tileX = Math.floor(x);\n      const tileY = Math.floor(y);\n      \n      if (tileX >= 0 && tileX < this.areaWidth && tileY >= 0 && tileY < this.areaHeight &&\n          world[tileY][tileX].type === 'grass') {\n        world[tileY][tileX] = { type: 'tree', solid: true };\n      }\n    }\n  }\n\n  private addBench(world: any[][], x: number, y: number): void {\n    if (x >= 0 && x < this.areaWidth && y >= 0 && y < this.areaHeight &&\n        world[y][x].type === 'grass') {\n      world[y][x] = { type: 'bench', solid: true };\n    }\n  }\n\n  private createParkingLot(world: any[][], x: number, y: number, width: number, height: number): void {\n    for (let py = y; py < y + height; py++) {\n      for (let px = x; px < x + width; px++) {\n        if (px < this.areaWidth && py < this.areaHeight && world[py][px].type === 'grass') {\n          world[py][px] = { type: 'parking', solid: false };\n        }\n      }\n    }\n  }\n\n  private addFlowersAroundBuilding(world: any[][], x: number, y: number, width: number, height: number): void {\n    // Add flowers around the perimeter of buildings\n    for (let fx = x - 1; fx <= x + width; fx++) {\n      for (let fy = y - 1; fy <= y + height; fy++) {\n        if (fx >= 0 && fx < this.areaWidth && fy >= 0 && fy < this.areaHeight &&\n            world[fy][fx].type === 'grass' && Math.random() < 0.3) {\n          world[fy][fx] = { type: 'flower', solid: false };\n        }\n      }\n    }\n  }\n\n  protected renderBackground(ctx: CanvasRenderingContext2D): void {\n    // Campus outdoor background\n    ctx.fillStyle = '#2a4d3a'; // Dark green campus background\n    ctx.fillRect(0, 0, 800, 600);\n  }\n\n  protected renderAreaSpecificElements(ctx: CanvasRenderingContext2D): void {\n    // Campus-specific UI elements\n    ctx.fillStyle = '#8B0000';\n    ctx.font = 'bold 14px serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('🏛️ VIRGINIA TECH CAMPUS', 10 - this.cameraX, 30 - this.cameraY);\n    \n    // Add VT spirit elements\n    ctx.fillStyle = '#FF8C00';\n    ctx.font = '12px serif';\n    ctx.fillText('HOKIES!', 10 - this.cameraX, 50 - this.cameraY);\n  }\n\n  // Override tile rendering for campus-specific styling\n  protected renderBuildingTile(ctx: CanvasRenderingContext2D, tile: any, x: number, y: number): void {\n    // Virginia Tech's signature Hokie Stone buildings\n    const buildingType = tile.buildingType;\n    \n    // Base Hokie Stone color\n    let baseColor = '#C4A484';\n    let accentColor = '#8B0000';\n    \n    // Different building types\n    switch (buildingType) {\n      case 'burruss':\n        baseColor = '#D4B896';\n        accentColor = '#8B0000';\n        break;\n      case 'newman':\n        baseColor = '#C4A484';\n        accentColor = '#FF8C00';\n        break;\n      case 'torgersen':\n        baseColor = '#E8DCC6'; // Light limestone color matching the image\n        accentColor = '#D4C4A8';\n        break;\n      default:\n        baseColor = '#C4A484';\n        accentColor = '#8B0000';\n    }\n    \n    // Specialized rendering for Torgersen Hall\n    if (buildingType === 'torgersen') {\n      this.renderTorgersenTile(ctx, x, y, baseColor, accentColor);\n    } else {\n      // Main building structure for other buildings\n      ctx.fillStyle = baseColor;\n      ctx.fillRect(x, y, this.tileSize, this.tileSize);\n      \n      // Stone texture\n      ctx.fillStyle = '#9A8870';\n      ctx.fillRect(x, y + 8, this.tileSize, 2);\n      ctx.fillRect(x + 8, y, 2, this.tileSize);\n      \n      // VT color accents\n      ctx.fillStyle = accentColor;\n      ctx.fillRect(x + 1, y + 1, this.tileSize - 2, 3);\n    }\n  }\n\n  private renderTorgersenTile(ctx: CanvasRenderingContext2D, x: number, y: number, baseColor: string, accentColor: string): void {\n    // Main limestone structure\n    ctx.fillStyle = baseColor;\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    \n    // Gothic stone block pattern\n    ctx.fillStyle = '#F5F0E8'; // Lighter limestone highlight\n    ctx.fillRect(x + 2, y + 2, this.tileSize - 4, this.tileSize - 4);\n    \n    // Stone block outlines (creating the ashlar masonry pattern)\n    ctx.strokeStyle = '#C8B99C'; // Darker mortar lines\n    ctx.lineWidth = 1;\n    ctx.strokeRect(x, y, this.tileSize, this.tileSize);\n    \n    // Horizontal mortar lines to simulate stone courses\n    ctx.beginPath();\n    ctx.moveTo(x, y + this.tileSize / 2);\n    ctx.lineTo(x + this.tileSize, y + this.tileSize / 2);\n    ctx.stroke();\n    \n    // Vertical joints (offset pattern)\n    const offset = Math.floor((x + y) / this.tileSize) % 2;\n    ctx.beginPath();\n    ctx.moveTo(x + this.tileSize / 2 + (offset * this.tileSize / 4), y);\n    ctx.lineTo(x + this.tileSize / 2 + (offset * this.tileSize / 4), y + this.tileSize);\n    ctx.stroke();\n    \n    // Gothic architectural details - arched window patterns for some tiles\n    if ((x + y) % (this.tileSize * 3) === 0) {\n      // Create Gothic arch pattern\n      ctx.fillStyle = '#4A4A4A';\n      ctx.beginPath();\n      ctx.arc(x + this.tileSize / 2, y + this.tileSize - 4, 6, Math.PI, 0);\n      ctx.fill();\n      \n      // Window glass\n      ctx.fillStyle = '#87CEEB';\n      ctx.beginPath();\n      ctx.arc(x + this.tileSize / 2, y + this.tileSize - 4, 4, Math.PI, 0);\n      ctx.fill();\n    }\n    \n    // Stone weathering and texture details\n    ctx.fillStyle = '#DDD4C0';\n    ctx.fillRect(x + 1, y + 1, 2, this.tileSize - 2);\n    ctx.fillRect(x + this.tileSize - 3, y + 1, 2, this.tileSize - 2);\n    \n    // Subtle shadow to give depth\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n    ctx.fillRect(x + this.tileSize - 2, y, 2, this.tileSize);\n    ctx.fillRect(x, y + this.tileSize - 2, this.tileSize, 2);\n  }\n}\n\nexport default CampusArea;\n\n"],"names":[],"mappings":";;;;AAAA;;AAGA,MAAM,mBAAmB,wIAAQ;IACxB,OAAkB,SAAS;IAExB,cAAsB;QAC9B,OAAO;IACT;IAEU,eAAwB;QAChC,MAAM,OAAgB,EAAE;QAExB,wBAAwB;QACxB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,EAAE,IAAK;YACxC,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE,IAAK;gBACvC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG;oBAAE,MAAM;oBAAS,OAAO;gBAAM;YAC7C;QACF;QAEA,sEAAsE;QACtE,IAAI,CAAC,uBAAuB,CAAC;QAC7B,IAAI,CAAC,mBAAmB,CAAC;QACzB,IAAI,CAAC,sBAAsB,CAAC;QAE5B,OAAO;IACT;IAEQ,wBAAwB,KAAc,EAAQ;QACpD,wDAAwD;QACxD,IAAI,CAAC,cAAc,CAAC,OAAO,IAAI,GAAG,GAAG,GAAG;QAExC,iBAAiB;QACjB,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG;QAEvC,2EAA2E;QAC3E,IAAI,CAAC,mBAAmB,CAAC,OAAO,IAAI,GAAG,GAAG;QAE1C,sBAAsB;QACtB,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG;QAEvC,yBAAyB;QACzB,IAAI,CAAC,cAAc,CAAC,OAAO,IAAI,GAAG,GAAG,GAAG;QAExC,sBAAsB;QACtB,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,GAAG,GAAG;QAExC,mBAAmB;QACnB,IAAI,CAAC,cAAc,CAAC,OAAO,IAAI,IAAI,GAAG,GAAG;QAEzC,gDAAgD;QAChD,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,IAAI,GAAG;IACzC;IAEQ,eAAe,KAAc,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc,EAAE,YAAoB,EAAQ;QACtH,IAAK,IAAI,KAAK,GAAG,KAAK,IAAI,QAAQ,KAAM;YACtC,IAAK,IAAI,KAAK,GAAG,KAAK,IAAI,OAAO,KAAM;gBACrC,IAAI,KAAK,IAAI,CAAC,SAAS,IAAI,KAAK,IAAI,CAAC,UAAU,EAAE;oBAC/C,yCAAyC;oBACzC,IAAI,OAAO,IAAI,SAAS,KAAK,OAAO,IAAI,KAAK,KAAK,CAAC,QAAQ,IAAI;wBAC7D,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;4BAAE,MAAM;4BAAQ,OAAO;4BAAO;wBAAa;oBAC7D,OAAO;wBACL,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;4BAAE,MAAM;4BAAY,OAAO;4BAAM;wBAAa;oBAChE;gBACF;YACF;QACF;IACF;IAEQ,oBAAoB,KAAc,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc,EAAQ;QACrG,qEAAqE;QACrE,wCAAwC;QACxC,yCAAyC;QACzC,wCAAwC;QAExC,IAAK,IAAI,KAAK,GAAG,KAAK,IAAI,QAAQ,KAAM;YACtC,IAAK,IAAI,KAAK,GAAG,KAAK,IAAI,OAAO,KAAM;gBACrC,IAAI,KAAK,IAAI,CAAC,SAAS,IAAI,KAAK,IAAI,CAAC,UAAU,EAAE;oBAC/C,kCAAkC;oBAClC,IAAI,MAAM,KAAK,MAAM,IAAI,KAAK,MAAM,KAAK,MAAM,IAAI,SAAS,GAAG;wBAC7D,IAAI,OAAO,IAAI,SAAS,KAAK,OAAO,IAAI,GAAG;4BACzC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;gCAAE,MAAM;gCAAQ,OAAO;gCAAO,cAAc;4BAAY;wBAC1E,OAAO;4BACL,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;gCAAE,MAAM;gCAAY,OAAO;gCAAM,cAAc;4BAAY;wBAC7E;oBACF,OAEK,IAAI,MAAM,IAAI,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,MAAM,KAAK,MAAM,IAAI,SAAS,GAAG;wBACtF,IAAI,OAAO,IAAI,SAAS,KAAK,OAAO,IAAI,QAAQ,GAAG;4BACjD,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;gCAAE,MAAM;gCAAQ,OAAO;gCAAO,cAAc;4BAAY;wBAC1E,OAAO;4BACL,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;gCAAE,MAAM;gCAAY,OAAO;gCAAM,cAAc;4BAAY;wBAC7E;oBACF,OAEK,IAAI,MAAM,IAAI,KAAK,MAAM,IAAI,KAAK,MAAM,IAAI,KAAK,MAAM,IAAI,GAAG;wBACjE,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;4BAAE,MAAM;4BAAY,OAAO;4BAAM,cAAc;wBAAY;oBAC7E,OAEK,IAAI,MAAM,IAAI,KAAK,MAAM,IAAI,SAAS,KAAK,MAAM,IAAI,KAAK,MAAM,IAAI,QAAQ,GAAG;wBAClF,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;4BAAE,MAAM;4BAAS,OAAO;wBAAM;oBAChD,OAEK,IAAI,OAAO,KAAK,MAAM,IAAI,KAAK,MAAM,IAAI,QAAQ,GAAG;wBACvD,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;4BAAE,MAAM;4BAAS,OAAO;wBAAM;oBAChD,OAEK,IAAI,OAAO,IAAI,SAAS,KAAK,OAAO,IAAI,KAAK,KAAK,CAAC,QAAQ,IAAI;wBAClE,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;4BAAE,MAAM;4BAAQ,OAAO;4BAAO,cAAc;wBAAY;oBAC1E;gBACF;YACF;QACF;IACF;IAEQ,iBAAiB,KAAc,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc,EAAQ;QAClG,IAAK,IAAI,KAAK,GAAG,KAAK,IAAI,UAAU,KAAK,IAAI,CAAC,UAAU,EAAE,KAAM;YAC9D,IAAK,IAAI,KAAK,GAAG,KAAK,IAAI,SAAS,KAAK,IAAI,CAAC,SAAS,EAAE,KAAM;gBAC5D,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;oBAAE,MAAM;oBAAS,OAAO;oBAAO,cAAc;gBAAa;YAC5E;QACF;IACF;IAEQ,oBAAoB,KAAc,EAAQ;QAChD,mCAAmC;QACnC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE,IAAK;YACvC,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS;gBAChC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG;oBAAE,MAAM;oBAAQ,OAAO;gBAAM;YAC7C;QACF;QAEA,sCAAsC;QACtC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,EAAE,IAAK;YACxC,oBAAoB;YACpB,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS;gBAC/C,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG;oBAAE,MAAM;oBAAQ,OAAO;gBAAM;YAC7C;YACA,iBAAiB;YACjB,IAAI,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,SAAS;gBACjD,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG;oBAAE,MAAM;oBAAQ,OAAO;gBAAM;YAC9C;YACA,qBAAqB;YACrB,IAAI,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,SAAS;gBACjD,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG;oBAAE,MAAM;oBAAQ,OAAO;gBAAM;YAC9C;QACF;QAEA,gCAAgC;QAChC,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,GAAG,eAAe,aAAa;QAC/D,IAAI,CAAC,gBAAgB,CAAC,OAAO,IAAI,GAAG,eAAe,WAAW;QAC9D,IAAI,CAAC,gBAAgB,CAAC,OAAO,IAAI,GAAG,aAAa,eAAe;QAChE,IAAI,CAAC,gBAAgB,CAAC,OAAO,IAAI,GAAG,aAAa,eAAe;IAClE;IAEQ,iBAAiB,KAAc,EAAE,MAAc,EAAE,MAAc,EAAE,SAAoC,EAAQ;QACnH,IAAI,cAAc,cAAc;YAC9B,IAAK,IAAI,IAAI,QAAQ,IAAI,SAAS,GAAG,IAAK;gBACxC,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS;oBAC3D,KAAK,CAAC,OAAO,CAAC,EAAE,GAAG;wBAAE,MAAM;wBAAQ,OAAO;oBAAM;gBAClD;YACF;QACF,OAAO;YACL,IAAK,IAAI,IAAI,QAAQ,IAAI,SAAS,GAAG,IAAK;gBACxC,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS;oBAC5D,KAAK,CAAC,EAAE,CAAC,OAAO,GAAG;wBAAE,MAAM;wBAAQ,OAAO;oBAAM;gBAClD;YACF;QACF;IACF;IAEQ,uBAAuB,KAAc,EAAQ;QACnD,0BAA0B;QAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,IAAI,IAAI,cAAc;QAC/C,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,IAAI,iBAAiB;QACjD,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,GAAG,IAAI,aAAa;QAE7C,0BAA0B;QAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG;QACxB,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI;QACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI;QAEzB,sBAAsB;QACtB,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,KAAK,SAAS;YAClC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;gBAAE,MAAM;gBAAY,OAAO;YAAK;QAClD;QAEA,mBAAmB;QACnB,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,GAAG,GAAG;QAEtC,+BAA+B;QAC/B,IAAI,CAAC,wBAAwB,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,iBAAiB;QACnE,IAAI,CAAC,wBAAwB,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,eAAe;IACnE;IAEQ,SAAS,KAAc,EAAE,OAAe,EAAE,OAAe,EAAE,KAAa,EAAQ;QACtF,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IAAK;YAC9B,MAAM,IAAI,UAAU,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;YAC5C,MAAM,IAAI,UAAU,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;YAC5C,MAAM,QAAQ,KAAK,KAAK,CAAC;YACzB,MAAM,QAAQ,KAAK,KAAK,CAAC;YAEzB,IAAI,SAAS,KAAK,QAAQ,IAAI,CAAC,SAAS,IAAI,SAAS,KAAK,QAAQ,IAAI,CAAC,UAAU,IAC7E,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,SAAS;gBACxC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG;oBAAE,MAAM;oBAAQ,OAAO;gBAAK;YACpD;QACF;IACF;IAEQ,SAAS,KAAc,EAAE,CAAS,EAAE,CAAS,EAAQ;QAC3D,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,UAAU,IAC7D,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS;YAChC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG;gBAAE,MAAM;gBAAS,OAAO;YAAK;QAC7C;IACF;IAEQ,iBAAiB,KAAc,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc,EAAQ;QAClG,IAAK,IAAI,KAAK,GAAG,KAAK,IAAI,QAAQ,KAAM;YACtC,IAAK,IAAI,KAAK,GAAG,KAAK,IAAI,OAAO,KAAM;gBACrC,IAAI,KAAK,IAAI,CAAC,SAAS,IAAI,KAAK,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,KAAK,SAAS;oBACjF,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;wBAAE,MAAM;wBAAW,OAAO;oBAAM;gBAClD;YACF;QACF;IACF;IAEQ,yBAAyB,KAAc,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc,EAAQ;QAC1G,gDAAgD;QAChD,IAAK,IAAI,KAAK,IAAI,GAAG,MAAM,IAAI,OAAO,KAAM;YAC1C,IAAK,IAAI,KAAK,IAAI,GAAG,MAAM,IAAI,QAAQ,KAAM;gBAC3C,IAAI,MAAM,KAAK,KAAK,IAAI,CAAC,SAAS,IAAI,MAAM,KAAK,KAAK,IAAI,CAAC,UAAU,IACjE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,KAAK,WAAW,KAAK,MAAM,KAAK,KAAK;oBACzD,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;wBAAE,MAAM;wBAAU,OAAO;oBAAM;gBACjD;YACF;QACF;IACF;IAEU,iBAAiB,GAA6B,EAAQ;QAC9D,4BAA4B;QAC5B,IAAI,SAAS,GAAG,WAAW,+BAA+B;QAC1D,IAAI,QAAQ,CAAC,GAAG,GAAG,KAAK;IAC1B;IAEU,2BAA2B,GAA6B,EAAQ;QACxE,8BAA8B;QAC9B,IAAI,SAAS,GAAG;QAChB,IAAI,IAAI,GAAG;QACX,IAAI,SAAS,GAAG;QAChB,IAAI,QAAQ,CAAC,4BAA4B,KAAK,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,OAAO;QAE7E,yBAAyB;QACzB,IAAI,SAAS,GAAG;QAChB,IAAI,IAAI,GAAG;QACX,IAAI,QAAQ,CAAC,WAAW,KAAK,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,OAAO;IAC9D;IAEA,sDAAsD;IAC5C,mBAAmB,GAA6B,EAAE,IAAS,EAAE,CAAS,EAAE,CAAS,EAAQ;QACjG,kDAAkD;QAClD,MAAM,eAAe,KAAK,YAAY;QAEtC,yBAAyB;QACzB,IAAI,YAAY;QAChB,IAAI,cAAc;QAElB,2BAA2B;QAC3B,OAAQ;YACN,KAAK;gBACH,YAAY;gBACZ,cAAc;gBACd;YACF,KAAK;gBACH,YAAY;gBACZ,cAAc;gBACd;YACF,KAAK;gBACH,YAAY,WAAW,2CAA2C;gBAClE,cAAc;gBACd;YACF;gBACE,YAAY;gBACZ,cAAc;QAClB;QAEA,2CAA2C;QAC3C,IAAI,iBAAiB,aAAa;YAChC,IAAI,CAAC,mBAAmB,CAAC,KAAK,GAAG,GAAG,WAAW;QACjD,OAAO;YACL,8CAA8C;YAC9C,IAAI,SAAS,GAAG;YAChB,IAAI,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YAE/C,gBAAgB;YAChB,IAAI,SAAS,GAAG;YAChB,IAAI,QAAQ,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE;YACtC,IAAI,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ;YAEvC,mBAAmB;YACnB,IAAI,SAAS,GAAG;YAChB,IAAI,QAAQ,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG;QAChD;IACF;IAEQ,oBAAoB,GAA6B,EAAE,CAAS,EAAE,CAAS,EAAE,SAAiB,EAAE,WAAmB,EAAQ;QAC7H,2BAA2B;QAC3B,IAAI,SAAS,GAAG;QAChB,IAAI,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ;QAE/C,6BAA6B;QAC7B,IAAI,SAAS,GAAG,WAAW,8BAA8B;QACzD,IAAI,QAAQ,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG;QAE9D,6DAA6D;QAC7D,IAAI,WAAW,GAAG,WAAW,sBAAsB;QACnD,IAAI,SAAS,GAAG;QAChB,IAAI,UAAU,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ;QAEjD,oDAAoD;QACpD,IAAI,SAAS;QACb,IAAI,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,QAAQ,GAAG;QAClC,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,QAAQ,GAAG;QAClD,IAAI,MAAM;QAEV,mCAAmC;QACnC,MAAM,SAAS,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI;QACrD,IAAI,SAAS;QACb,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAK,SAAS,IAAI,CAAC,QAAQ,GAAG,GAAI;QACjE,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAK,SAAS,IAAI,CAAC,QAAQ,GAAG,GAAI,IAAI,IAAI,CAAC,QAAQ;QAClF,IAAI,MAAM;QAEV,uEAAuE;QACvE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,MAAM,GAAG;YACvC,6BAA6B;YAC7B,IAAI,SAAS,GAAG;YAChB,IAAI,SAAS;YACb,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAG,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,KAAK,EAAE,EAAE;YAClE,IAAI,IAAI;YAER,eAAe;YACf,IAAI,SAAS,GAAG;YAChB,IAAI,SAAS;YACb,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAG,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,KAAK,EAAE,EAAE;YAClE,IAAI,IAAI;QACV;QAEA,uCAAuC;QACvC,IAAI,SAAS,GAAG;QAChB,IAAI,QAAQ,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG;QAC9C,IAAI,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG;QAE9D,8BAA8B;QAC9B,IAAI,SAAS,GAAG;QAChB,IAAI,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ;QACvD,IAAI,QAAQ,CAAC,GAAG,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE;IACxD;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 1064, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/off-campus/NameBarBuilding.ts"],"sourcesContent":["import BaseArea from '../BaseArea';\nimport { SceneType } from '../types';\n\ninterface OffCampusTile {\n  type: 'grass' | 'road' | 'sidewalk' | 'building' | 'parking' | 'tree' | 'house' | 'apartment' | 'restaurant' | 'shop' | 'door' | 'floor' | 'wall' | 'furniture' | 'window' | 'stairs' | 'elevator';\n  solid: boolean;\n  buildingType?: 'apartment' | 'restaurant' | 'shop' | 'bank' | 'gas_station' | 'hotel' | 'downtown' | 'tots' | 'hokiehouse' | 'centros';\n  furniture?: 'desk' | 'chair' | 'bookshelf' | 'computer' | 'table' | 'couch' | 'plant' | 'car' | 'bench';\n}\n\nclass NameBarBuilding extends BaseArea {\n  public type: SceneType = 'campus'; // Still part of the main campus scene but different area\n\n  protected getAreaName(): string {\n    return 'Downtown Blacksburg';\n  }\n\n  protected generateArea(): OffCampusTile[][] {\n    const area: OffCampusTile[][] = [];\n    \n    // Initialize with grass\n    for (let y = 0; y < this.areaHeight; y++) {\n      area[y] = [];\n      for (let x = 0; x < this.areaWidth; x++) {\n        area[y][x] = { type: 'grass', solid: false };\n      }\n    }\n\n    // Create off-campus layout - this represents the TOP HALF of the world\n    this.generateDowntownArea(area);\n    this.generateResidentialArea(area);\n    this.generateCommercialStrip(area);\n\n    return area;\n  }\n\n  private generateDowntownArea(world: OffCampusTile[][]): void {\n    // Main Street (horizontal road through downtown)\n    for (let x = 0; x < this.areaWidth; x++) {\n      world[9][x] = { type: 'road', solid: false };\n      // Sidewalks on both sides\n      if (world[8]) world[8][x] = { type: 'sidewalk', solid: false };\n      if (world[10]) world[10][x] = { type: 'sidewalk', solid: false };\n    }\n\n    // Downtown buildings along Main Street\n    this.createCommercialBuilding(world, 2, 6, 3, 2, 'tots'); // Tots Restaurant\n    this.createCommercialBuilding(world, 6, 6, 2, 2, 'shop'); // Shop\n    this.createCommercialBuilding(world, 9, 6, 3, 2, 'hokiehouse'); // Hokie House\n    this.createCommercialBuilding(world, 13, 6, 2, 2, 'shop'); // Another shop\n    this.createCommercialBuilding(world, 16, 6, 4, 2, 'hotel'); // Hotel\n\n    // Buildings on south side of Main Street\n    this.createCommercialBuilding(world, 3, 11, 2, 2, 'gas_station'); // Gas station\n    this.createCommercialBuilding(world, 7, 11, 3, 2, 'centros'); // Centros Restaurant\n    this.createCommercialBuilding(world, 12, 11, 4, 2, 'shop'); // Large shop\n    this.createCommercialBuilding(world, 17, 11, 3, 2, 'restaurant'); // Restaurant\n  }\n\n  private generateResidentialArea(world: OffCampusTile[][]): void {\n    // Residential street\n    for (let x = 5; x < 20; x++) {\n      world[4][x] = { type: 'road', solid: false };\n      world[3][x] = { type: 'sidewalk', solid: false };\n      world[5][x] = { type: 'sidewalk', solid: false };\n    }\n\n    // Student apartment complexes\n    this.createApartmentBuilding(world, 1, 1, 3, 2); // Apartment complex 1\n    this.createApartmentBuilding(world, 5, 1, 4, 2); // Apartment complex 2\n    this.createApartmentBuilding(world, 11, 1, 3, 2); // Apartment complex 3\n    this.createApartmentBuilding(world, 16, 1, 4, 2); // Apartment complex 4\n    this.createApartmentBuilding(world, 21, 1, 3, 2); // Apartment complex 5\n  }\n\n  private generateCommercialStrip(world: OffCampusTile[][]): void {\n    // Add parking lots\n    this.createParkingArea(world, 1, 14, 5, 3);\n    this.createParkingArea(world, 15, 14, 6, 3);\n\n    // Add some trees and landscaping\n    this.addTrees(world, 8, 16, 3);\n    this.addTrees(world, 18, 2, 2);\n  }\n\n  private createCommercialBuilding(world: OffCampusTile[][], x: number, y: number, width: number, height: number, buildingType: OffCampusTile['buildingType']): void {\n    for (let by = y; by < y + height; by++) {\n      for (let bx = x; bx < x + width; bx++) {\n        if (bx < this.areaWidth && by < this.areaHeight) {\n          // Create doors on the front of buildings (facing the street)\n          if (by === y + height - 1 && bx === x + Math.floor(width / 2)) {\n            world[by][bx] = { type: 'door', solid: false, buildingType };\n          } else {\n            world[by][bx] = { type: 'building', solid: true, buildingType };\n          }\n        }\n      }\n    }\n  }\n\n  private createApartmentBuilding(world: OffCampusTile[][], x: number, y: number, width: number, height: number): void {\n    for (let by = y; by < y + height; by++) {\n      for (let bx = x; bx < x + width; bx++) {\n        if (bx < this.areaWidth && by < this.areaHeight) {\n          if (by === y + height - 1 && bx === x + Math.floor(width / 2)) {\n            world[by][bx] = { type: 'door', solid: false, buildingType: 'apartment' };\n          } else {\n            world[by][bx] = { type: 'building', solid: true, buildingType: 'apartment' };\n          }\n        }\n      }\n    }\n  }\n\n  private createParkingArea(world: OffCampusTile[][], x: number, y: number, width: number, height: number): void {\n    for (let py = y; py < y + height; py++) {\n      for (let px = x; px < x + width; px++) {\n        if (px < this.areaWidth && py < this.areaHeight) {\n          world[py][px] = { type: 'parking', solid: false };\n        }\n      }\n    }\n  }\n\n  private addTrees(world: OffCampusTile[][], centerX: number, centerY: number, count: number): void {\n    for (let i = 0; i < count; i++) {\n      const x = centerX + (Math.random() - 0.5) * 4;\n      const y = centerY + (Math.random() - 0.5) * 4;\n      const tileX = Math.floor(x);\n      const tileY = Math.floor(y);\n      \n      if (tileX >= 0 && tileX < this.areaWidth && tileY >= 0 && tileY < this.areaHeight &&\n          world[tileY][tileX].type === 'grass') {\n        world[tileY][tileX] = { type: 'tree', solid: true };\n      }\n    }\n  }\n\n  protected renderBackground(ctx: CanvasRenderingContext2D): void {\n    // Off-campus urban background\n    ctx.fillStyle = '#4a5c6a'; // Urban bluish-gray background\n    ctx.fillRect(0, 0, 800, 600);\n  }\n\n  protected renderAreaSpecificElements(ctx: CanvasRenderingContext2D): void {\n    // Off-campus specific UI elements\n    ctx.fillStyle = '#2F4F4F';\n    ctx.font = 'bold 14px sans-serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('🏙️ DOWNTOWN BLACKSBURG', 10 - this.cameraX, 30 - this.cameraY);\n    \n    // Add downtown elements\n    ctx.fillStyle = '#FF6B6B';\n    ctx.font = '12px sans-serif';\n    ctx.fillText('Shops • Restaurants • Apartments', 10 - this.cameraX, 50 - this.cameraY);\n    \n    // Building name signs\n    this.renderBuildingSigns(ctx);\n  }\n\n  private renderBuildingSigns(ctx: CanvasRenderingContext2D): void {\n    // Tots sign (building at x: 2-4, y: 6-7)\n    const totsX = 3 * this.tileSize; // Center of 3-tile wide building\n    const totsY = 6 * this.tileSize - 15; // Above the building\n    \n    // Tots sign background\n    ctx.fillStyle = '#FF6B35'; // Orange background\n    ctx.fillRect(totsX - 25 - this.cameraX, totsY - this.cameraY, 50, 12);\n    \n    // Tots text\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = 'bold 10px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('TOTS', totsX - this.cameraX, totsY + 8 - this.cameraY);\n    \n    // HokieHouse sign (building at x: 9-11, y: 6-7)\n    const hokieX = 10 * this.tileSize; // Center of 3-tile wide building\n    const hokieY = 6 * this.tileSize - 15; // Above the building\n    \n    // HokieHouse sign background\n    ctx.fillStyle = '#8B0000'; // VT Maroon background\n    ctx.fillRect(hokieX - 35 - this.cameraX, hokieY - this.cameraY, 70, 12);\n    \n    // HokieHouse text\n    ctx.fillStyle = '#FF8C00'; // VT Orange text\n    ctx.font = 'bold 9px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('HOKIE HOUSE', hokieX - this.cameraX, hokieY + 8 - this.cameraY);\n    \n    // Centros sign (building at x: 7-9, y: 11-12)\n    const centrosX = 8 * this.tileSize; // Center of 3-tile wide building\n    const centrosY = 11 * this.tileSize - 15; // Above the building\n    \n    // Centros sign background\n    ctx.fillStyle = '#FF1493'; // Hot pink background (neon club colors)\n    ctx.fillRect(centrosX - 30 - this.cameraX, centrosY - this.cameraY, 60, 12);\n    \n    // Centros text\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = 'bold 10px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('CENTROS', centrosX - this.cameraX, centrosY + 8 - this.cameraY);\n    \n    // Add neon glow effect for Centros (dance club)\n    ctx.shadowColor = '#FF1493';\n    ctx.shadowBlur = 8;\n    ctx.fillStyle = '#00FFFF'; // Cyan neon text\n    ctx.fillText('CENTROS', centrosX - this.cameraX, centrosY + 8 - this.cameraY);\n    ctx.shadowBlur = 0; // Reset shadow\n    \n    // Add small decorative elements\n    // Tots: Food icon\n    ctx.fillStyle = '#FF6B35';\n    ctx.font = '12px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('🍟', totsX - this.cameraX, totsY - 5 - this.cameraY);\n    \n    // HokieHouse: Turkey (Hokie bird)\n    ctx.fillStyle = '#FF8C00';\n    ctx.fillText('🦃', hokieX - this.cameraX, hokieY - 5 - this.cameraY);\n    \n    // Centros: Dancing figures\n    ctx.fillStyle = '#FF1493';\n    ctx.fillText('💃', centrosX - 15 - this.cameraX, centrosY - 5 - this.cameraY);\n    ctx.fillText('🕺', centrosX + 15 - this.cameraX, centrosY - 5 - this.cameraY);\n  }\n\n  // Override tile rendering for off-campus styling\n  protected renderBuildingTile(ctx: CanvasRenderingContext2D, tile: any, x: number, y: number): void {\n    const buildingType = tile.buildingType;\n    \n    // Different styles for different building types\n    let baseColor = '#8B7355'; // Default brown\n    let accentColor = '#654321';\n    \n    switch (buildingType) {\n      case 'apartment':\n        baseColor = '#A0522D'; // Brick color for apartments\n        accentColor = '#8B4513';\n        break;\n      case 'restaurant':\n        baseColor = '#CD853F'; // Warm color for restaurants\n        accentColor = '#FF6B6B';\n        break;\n      case 'shop':\n        baseColor = '#D2B48C'; // Light color for shops\n        accentColor = '#4ECDC4';\n        break;\n      case 'bank':\n        baseColor = '#778899'; // Professional gray for bank\n        accentColor = '#2F4F4F';\n        break;\n      case 'gas_station':\n        baseColor = '#FFFF00'; // Bright for gas station\n        accentColor = '#FF0000';\n        break;\n      case 'hotel':\n        baseColor = '#DDA0DD'; // Purple for hotel\n        accentColor = '#8B008B';\n        break;\n      default:\n        baseColor = '#8B7355';\n        accentColor = '#654321';\n    }\n    \n    // Main building structure\n    ctx.fillStyle = baseColor;\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    \n    // Building details\n    ctx.fillStyle = accentColor;\n    ctx.fillRect(x + 1, y + 1, this.tileSize - 2, 3); // Top accent\n    \n    // Windows\n    ctx.fillStyle = '#87CEEB';\n    ctx.fillRect(x + 4, y + 6, 6, 8);\n    ctx.fillRect(x + 12, y + 6, 6, 8);\n  }\n\n  protected renderRoadTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Urban road with better markings\n    ctx.fillStyle = '#2F2F2F';\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    \n    // Road markings\n    ctx.fillStyle = '#FFFF00';\n    ctx.fillRect(x, y + 14, this.tileSize, 2);\n    \n    // Road texture\n    ctx.fillStyle = '#3F3F3F';\n    for (let i = 0; i < 3; i++) {\n      const px = x + Math.floor(Math.random() * this.tileSize);\n      const py = y + Math.floor(Math.random() * this.tileSize);\n      ctx.fillRect(px, py, 1, 1);\n    }\n  }\n}\n\nexport default NameBarBuilding;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1361, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/World.ts"],"sourcesContent":["import Player from './Player';\nimport { Scene, SceneType } from './types';\nimport CampusArea from './campus/CampusArea';\nimport NameBarBuilding from './off-campus/NameBarBuilding';\n\nclass World implements Scene {\n  public type: SceneType = 'campus';\n  private tileSize: number = 32;\n  private areaWidth: number = 25; // tiles (800px)\n  private areaHeight: number = 19; // tiles (608px)\n  private totalWorldHeight: number = 38; // 2 areas stacked (1216px total)\n  \n  private campusArea: CampusArea;\n  private offCampusArea: NameBarBuilding;\n  public cameraX: number = 0;\n  public cameraY: number = 0;\n\n  constructor() {\n    this.campusArea = new CampusArea();\n    this.offCampusArea = new NameBarBuilding();\n  }\n\n  public canMoveTo(x: number, y: number, width: number, height: number): boolean {\n    // Calculate which area the player is in based on Y position\n    const areaHeightPixels = this.areaHeight * this.tileSize; // 608px\n    \n    if (y < areaHeightPixels) {\n      // Top area - off-campus\n      return this.offCampusArea.canMoveTo(x, y, width, height);\n    } else {\n      // Bottom area - campus (adjust Y coordinate to be relative to campus area)\n      const campusY = y - areaHeightPixels;\n      return this.campusArea.canMoveTo(x, campusY, width, height);\n    }\n  }\n\n  public update(deltaTime: number): void {\n    this.campusArea.update(deltaTime);\n    this.offCampusArea.update(deltaTime);\n  }\n\n  public render(ctx: CanvasRenderingContext2D, player: Player): void {\n    // Update camera to follow player\n    this.updateCamera(player);\n\n    // Clear canvas\n    ctx.fillStyle = '#2a4d3a';\n    ctx.fillRect(0, 0, 800, 600);\n\n    // Calculate which areas are visible based on camera position\n    const areaHeightPixels = this.areaHeight * this.tileSize; // 608px\n    const cameraTop = this.cameraY;\n    const cameraBottom = this.cameraY + 600;\n\n    // Render off-campus area (top) if visible\n    if (cameraTop < areaHeightPixels) {\n      ctx.save();\n      // Translate to show off-campus area\n      ctx.translate(-this.cameraX, -cameraTop);\n      \n      // Create a temporary player position for off-campus rendering\n      const tempPlayer = { ...player };\n      this.offCampusArea.render(ctx, tempPlayer);\n      ctx.restore();\n    }\n\n    // Render campus area (bottom) if visible\n    if (cameraBottom > areaHeightPixels) {\n      ctx.save();\n      // Translate to show campus area\n      ctx.translate(-this.cameraX, areaHeightPixels - cameraTop);\n      \n      // Create a temporary player position for campus rendering (adjust Y)\n      const tempPlayer = { ...player, y: player.y - areaHeightPixels };\n      this.campusArea.render(ctx, tempPlayer);\n      ctx.restore();\n    }\n\n    // Render boundary line between areas\n    if (cameraTop < areaHeightPixels && cameraBottom > areaHeightPixels) {\n      const boundaryY = areaHeightPixels - cameraTop;\n      \n      // Golden transition line\n      ctx.fillStyle = '#FFD700';\n      ctx.fillRect(0, boundaryY - 2, 800, 4);\n      \n      // Area labels\n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = 'bold 16px sans-serif';\n      ctx.textAlign = 'center';\n      ctx.shadowColor = 'rgba(0,0,0,0.8)';\n      ctx.shadowOffsetX = 2;\n      ctx.shadowOffsetY = 2;\n      \n      if (boundaryY > 30) {\n        ctx.fillText('🏙️ DOWNTOWN BLACKSBURG', 400, boundaryY - 15);\n      }\n      if (boundaryY < 570) {\n        ctx.fillText('🏛️ VIRGINIA TECH CAMPUS', 400, boundaryY + 25);\n      }\n      \n      ctx.shadowColor = 'transparent';\n    }\n  }\n\n  private updateCamera(player: Player): void {\n    // Camera follows player through the entire world\n    const targetCameraX = player.x - 400 + player.width / 2;\n    const targetCameraY = player.y - 300 + player.height / 2;\n\n    // World bounds\n    const maxCameraX = this.areaWidth * this.tileSize - 800; // 800 - 800 = 0 (no horizontal scrolling for single screen width)\n    const maxCameraY = (this.totalWorldHeight * this.tileSize) - 600; // Total world height minus screen height\n\n    this.cameraX = Math.max(0, Math.min(maxCameraX, targetCameraX));\n    this.cameraY = Math.max(0, Math.min(maxCameraY, targetCameraY));\n  }\n\n  // Method to get tile information for scene transitions\n  public getTileAt(tileX: number, tileY: number): any | null {\n    const areaHeightTiles = this.areaHeight; // 19 tiles\n    \n    if (tileY < areaHeightTiles) {\n      // Off-campus area\n      return this.offCampusArea.getTileAt(tileX, tileY);\n    } else {\n      // Campus area (adjust tile Y)\n      const campusTileY = tileY - areaHeightTiles;\n      return this.campusArea.getTileAt(tileX, campusTileY);\n    }\n  }\n\n  public getEntrancePosition(): { x: number, y: number } {\n    // Start in campus area (bottom half)\n    const areaHeightPixels = this.areaHeight * this.tileSize;\n    return { x: 400, y: areaHeightPixels + 300 }; // Middle of campus area\n  }\n}\n\nexport default World;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1492, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/campus/BaseBuildingInterior.ts"],"sourcesContent":["import Player from '../Player';\nimport { Scene, SceneType } from '../types';\n\ninterface InteriorTile {\n  type: 'floor' | 'wall' | 'door' | 'furniture' | 'window' | 'stairs' | 'elevator';\n  solid: boolean;\n  furniture?: 'desk' | 'chair' | 'bookshelf' | 'computer' | 'table' | 'couch' | 'plant';\n}\n\nabstract class BaseBuildingInterior implements Scene {\n  public abstract type: SceneType;\n  protected tileSize: number = 32;\n  protected roomWidth: number = 20; // tiles\n  protected roomHeight: number = 15; // tiles\n  protected tiles: InteriorTile[][];\n  public cameraX: number = 0;\n  public cameraY: number = 0;\n  protected exitX: number = 320; // Default exit position\n  protected exitY: number = 450;\n\n  constructor() {\n    this.tiles = this.generateInterior();\n  }\n\n  protected abstract generateInterior(): InteriorTile[][];\n  protected abstract getBuildingName(): string;\n\n  public canMoveTo(x: number, y: number, width: number, height: number): boolean {\n    // Convert pixel coordinates to tile coordinates\n    const leftTile = Math.floor(x / this.tileSize);\n    const rightTile = Math.floor((x + width - 1) / this.tileSize);\n    const topTile = Math.floor(y / this.tileSize);\n    const bottomTile = Math.floor((y + height - 1) / this.tileSize);\n\n    // Check all tiles that the entity overlaps\n    for (let tileY = topTile; tileY <= bottomTile; tileY++) {\n      for (let tileX = leftTile; tileX <= rightTile; tileX++) {\n        if (this.isTileSolid(tileX, tileY)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  private isTileSolid(tileX: number, tileY: number): boolean {\n    // Check bounds\n    if (tileX < 0 || tileX >= this.roomWidth || tileY < 0 || tileY >= this.roomHeight) {\n      return true; // Treat out-of-bounds as solid\n    }\n\n    return this.tiles[tileY][tileX].solid;\n  }\n\n  public update(deltaTime: number): void {\n    // Base update logic - can be overridden\n  }\n\n  public render(ctx: CanvasRenderingContext2D, player: Player): void {\n    // Simple camera that centers on the room\n    this.updateCamera(player);\n\n    // Clear with indoor background\n    ctx.fillStyle = '#F5F5DC'; // Beige indoor background\n    ctx.fillRect(0, 0, 800, 600);\n\n    // Render visible tiles\n    const startTileX = Math.max(0, Math.floor(this.cameraX / this.tileSize));\n    const endTileX = Math.min(this.roomWidth - 1, Math.floor((this.cameraX + 800) / this.tileSize));\n    const startTileY = Math.max(0, Math.floor(this.cameraY / this.tileSize));\n    const endTileY = Math.min(this.roomHeight - 1, Math.floor((this.cameraY + 600) / this.tileSize));\n\n    for (let tileY = startTileY; tileY <= endTileY; tileY++) {\n      for (let tileX = startTileX; tileX <= endTileX; tileX++) {\n        const tile = this.tiles[tileY][tileX];\n        const x = tileX * this.tileSize - this.cameraX;\n        const y = tileY * this.tileSize - this.cameraY;\n\n        this.renderTile(ctx, tile, x, y);\n      }\n    }\n\n    // Render building-specific elements\n    this.renderBuildingSpecificElements(ctx);\n  }\n\n  protected abstract renderBuildingSpecificElements(ctx: CanvasRenderingContext2D): void;\n\n  private updateCamera(player: Player): void {\n    // Keep camera centered on room, don't follow player too closely\n    const targetCameraX = Math.max(0, Math.min(this.roomWidth * this.tileSize - 800, 0));\n    const targetCameraY = Math.max(0, Math.min(this.roomHeight * this.tileSize - 600, 0));\n\n    this.cameraX = targetCameraX;\n    this.cameraY = targetCameraY;\n  }\n\n  private renderTile(ctx: CanvasRenderingContext2D, tile: InteriorTile, x: number, y: number): void {\n    switch (tile.type) {\n      case 'floor':\n        this.renderFloorTile(ctx, x, y);\n        break;\n      case 'wall':\n        this.renderWallTile(ctx, x, y);\n        break;\n      case 'door':\n        this.renderDoorTile(ctx, x, y);\n        break;\n      case 'furniture':\n        this.renderFurnitureTile(ctx, tile, x, y);\n        break;\n      case 'window':\n        this.renderWindowTile(ctx, x, y);\n        break;\n    }\n  }\n\n  protected renderFloorTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Polished interior floor\n    ctx.fillStyle = '#DEB887'; // Burlywood\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    \n    // Floor pattern\n    ctx.fillStyle = '#D2B48C';\n    ctx.fillRect(x + 1, y + 1, this.tileSize - 2, this.tileSize - 2);\n    \n    // Tile lines\n    ctx.fillStyle = '#CD853F';\n    ctx.fillRect(x, y + 15, this.tileSize, 1);\n    ctx.fillRect(x + 15, y, 1, this.tileSize);\n  }\n\n  protected renderWallTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Interior wall with VT colors\n    ctx.fillStyle = '#F5F5DC'; // Beige base\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    \n    // Wall trim\n    ctx.fillStyle = '#8B0000'; // VT Maroon\n    ctx.fillRect(x, y, this.tileSize, 4);\n    ctx.fillRect(x, y + this.tileSize - 4, this.tileSize, 4);\n    \n    // Wall texture\n    ctx.fillStyle = '#DDBEA9';\n    ctx.fillRect(x + 2, y + 4, this.tileSize - 4, this.tileSize - 8);\n  }\n\n  protected renderDoorTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Floor base\n    this.renderFloorTile(ctx, x, y);\n    \n    // Exit indicator\n    ctx.fillStyle = '#32CD32'; // Lime green\n    ctx.fillRect(x + 8, y + 8, 16, 16);\n    \n    // Exit text\n    ctx.fillStyle = 'white';\n    ctx.font = '8px monospace';\n    ctx.fillText('EXIT', x + 10, y + 18);\n  }\n\n  protected renderFurnitureTile(ctx: CanvasRenderingContext2D, tile: InteriorTile, x: number, y: number): void {\n    // Floor base\n    this.renderFloorTile(ctx, x, y);\n    \n    // Furniture based on type\n    switch (tile.furniture) {\n      case 'desk':\n        ctx.fillStyle = '#8B4513'; // Brown wood\n        ctx.fillRect(x + 4, y + 8, 24, 16);\n        break;\n      case 'chair':\n        ctx.fillStyle = '#8B0000'; // VT Maroon\n        ctx.fillRect(x + 8, y + 8, 16, 16);\n        ctx.fillRect(x + 10, y + 6, 12, 4); // Back\n        break;\n      case 'bookshelf':\n        ctx.fillStyle = '#8B4513'; // Brown wood\n        ctx.fillRect(x + 2, y + 2, 28, 28);\n        // Books\n        ctx.fillStyle = '#FF8C00'; // VT Orange\n        ctx.fillRect(x + 4, y + 6, 4, 20);\n        ctx.fillStyle = '#8B0000'; // VT Maroon\n        ctx.fillRect(x + 10, y + 6, 4, 20);\n        ctx.fillStyle = '#FF8C00';\n        ctx.fillRect(x + 16, y + 6, 4, 20);\n        break;\n      case 'computer':\n        ctx.fillStyle = '#2F2F2F'; // Dark gray\n        ctx.fillRect(x + 8, y + 12, 16, 12);\n        ctx.fillStyle = '#4169E1'; // Blue screen\n        ctx.fillRect(x + 10, y + 14, 12, 8);\n        break;\n      case 'table':\n        ctx.fillStyle = '#8B4513'; // Brown wood\n        ctx.fillRect(x + 2, y + 10, 28, 12);\n        break;\n    }\n  }\n\n  protected renderWindowTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Wall base\n    this.renderWallTile(ctx, x, y);\n    \n    // Window\n    ctx.fillStyle = '#87CEEB'; // Sky blue\n    ctx.fillRect(x + 4, y + 4, 24, 24);\n    \n    // Window frame\n    ctx.fillStyle = '#8B4513'; // Brown\n    ctx.fillRect(x + 2, y + 2, 28, 4);\n    ctx.fillRect(x + 2, y + 26, 28, 4);\n    ctx.fillRect(x + 2, y + 2, 4, 28);\n    ctx.fillRect(x + 26, y + 2, 4, 28);\n    \n    // Cross pattern\n    ctx.fillRect(x + 14, y + 4, 4, 24);\n    ctx.fillRect(x + 4, y + 14, 24, 4);\n  }\n\n  public getExitPosition(): { x: number, y: number, scene: SceneType } {\n    return { x: this.exitX, y: this.exitY, scene: 'campus' };\n  }\n\n  public getEntrancePosition(): { x: number, y: number } {\n    return { x: this.exitX, y: this.exitY - 50 }; // Enter slightly above exit\n  }\n}\n\nexport default BaseBuildingInterior;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1689, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/campus/BurrussInterior.ts"],"sourcesContent":["import BaseBuildingInterior from './BaseBuildingInterior';\nimport { SceneType } from '../types';\n\nclass BurrussInterior extends BaseBuildingInterior {\n  public type: SceneType = 'burruss';\n\n  protected getBuildingName(): string {\n    return 'Burruss Hall - Administration';\n  }\n\n  protected generateInterior(): any[][] {\n    const interior: any[][] = [];\n    \n    for (let y = 0; y < this.roomHeight; y++) {\n      interior[y] = [];\n      for (let x = 0; x < this.roomWidth; x++) {\n        // Create the layout for Burruss Hall administrative building\n        \n        // Outer walls\n        if (x === 0 || x === this.roomWidth - 1 || y === 0 || y === this.roomHeight - 1) {\n          interior[y][x] = { type: 'wall', solid: true };\n        }\n        // Exit door at bottom center\n        else if (y === this.roomHeight - 1 && x === Math.floor(this.roomWidth / 2)) {\n          interior[y][x] = { type: 'door', solid: false };\n        }\n        // Reception area (center)\n        else if (x >= 8 && x <= 11 && y >= 6 && y <= 8) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'desk' };\n        }\n        // Chairs in waiting area\n        else if ((x === 6 || x === 13) && (y === 9 || y === 10)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'chair' };\n        }\n        // Administrative offices (sides)\n        else if ((x >= 2 && x <= 4 && y >= 2 && y <= 4) || \n                 (x >= 15 && x <= 17 && y >= 2 && y <= 4) ||\n                 (x >= 2 && x <= 4 && y >= 10 && y <= 12) ||\n                 (x >= 15 && x <= 17 && y >= 10 && y <= 12)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'desk' };\n        }\n        // Windows along top wall\n        else if (y === 0 && (x === 5 || x === 10 || x === 14)) {\n          interior[y][x] = { type: 'window', solid: true };\n        }\n        // Computer stations\n        else if ((x === 7 && y === 3) || (x === 12 && y === 3)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'computer' };\n        }\n        // Floor\n        else {\n          interior[y][x] = { type: 'floor', solid: false };\n        }\n      }\n    }\n    \n    return interior;\n  }\n\n  protected renderBuildingSpecificElements(ctx: CanvasRenderingContext2D): void {\n    // Burruss Hall specific elements\n    \n    // VT seal/logo in center\n    ctx.fillStyle = '#8B0000'; // Maroon\n    ctx.fillCircle = function(x, y, radius) {\n      this.beginPath();\n      this.arc(x, y, radius, 0, 2 * Math.PI);\n      this.fill();\n    };\n    \n    const centerX = 400 - this.cameraX;\n    const centerY = 200 - this.cameraY;\n    \n    ctx.fillStyle = '#8B0000';\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 30, 0, 2 * Math.PI);\n    ctx.fill();\n    \n    ctx.fillStyle = '#FF8C00';\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 25, 0, 2 * Math.PI);\n    ctx.fill();\n    \n    // VT text\n    ctx.fillStyle = '#8B0000';\n    ctx.font = 'bold 16px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('VT', centerX, centerY + 5);\n    \n    // Building name\n    ctx.fillStyle = '#8B0000';\n    ctx.font = 'bold 14px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('BURRUSS HALL', 400 - this.cameraX, 50 - this.cameraY);\n    ctx.fillText('ADMINISTRATION', 400 - this.cameraX, 70 - this.cameraY);\n    \n    // Marble columns effect\n    ctx.fillStyle = '#F5F5DC';\n    ctx.fillRect(150 - this.cameraX, 0, 20, 200);\n    ctx.fillRect(300 - this.cameraX, 0, 20, 200);\n    ctx.fillRect(450 - this.cameraX, 0, 20, 200);\n    ctx.fillRect(600 - this.cameraX, 0, 20, 200);\n  }\n}\n\nexport default BurrussInterior;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1799, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/campus/NewmanInterior.ts"],"sourcesContent":["import BaseBuildingInterior from './BaseBuildingInterior';\nimport { SceneType } from '../types';\n\nclass NewmanInterior extends BaseBuildingInterior {\n  public type: SceneType = 'newman';\n\n  protected getBuildingName(): string {\n    return 'Newman Library';\n  }\n\n  protected generateInterior(): any[][] {\n    const interior: any[][] = [];\n    \n    for (let y = 0; y < this.roomHeight; y++) {\n      interior[y] = [];\n      for (let x = 0; x < this.roomWidth; x++) {\n        // Create the layout for Newman Library\n        \n        // Outer walls\n        if (x === 0 || x === this.roomWidth - 1 || y === 0 || y === this.roomHeight - 1) {\n          interior[y][x] = { type: 'wall', solid: true };\n        }\n        // Exit door at bottom center\n        else if (y === this.roomHeight - 1 && x === Math.floor(this.roomWidth / 2)) {\n          interior[y][x] = { type: 'door', solid: false };\n        }\n        // Bookshelves along walls\n        else if ((x === 1 && y >= 2 && y <= 12) || \n                 (x === this.roomWidth - 2 && y >= 2 && y <= 12) ||\n                 (y === 1 && x >= 3 && x <= 16 && x % 3 === 0)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'bookshelf' };\n        }\n        // Study tables in center\n        else if ((x >= 6 && x <= 8 && y >= 5 && y <= 6) ||\n                 (x >= 11 && x <= 13 && y >= 5 && y <= 6) ||\n                 (x >= 6 && x <= 8 && y >= 9 && y <= 10) ||\n                 (x >= 11 && x <= 13 && y >= 9 && y <= 10)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'table' };\n        }\n        // Chairs around tables\n        else if ((x === 5 && (y === 5 || y === 9)) ||\n                 (x === 9 && (y === 5 || y === 9)) ||\n                 (x === 10 && (y === 5 || y === 9)) ||\n                 (x === 14 && (y === 5 || y === 9))) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'chair' };\n        }\n        // Computer stations\n        else if ((x >= 3 && x <= 5 && y === 3) ||\n                 (x >= 14 && x <= 16 && y === 3)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'computer' };\n        }\n        // Windows\n        else if (y === 0 && (x === 4 || x === 8 || x === 12 || x === 16)) {\n          interior[y][x] = { type: 'window', solid: true };\n        }\n        // Floor\n        else {\n          interior[y][x] = { type: 'floor', solid: false };\n        }\n      }\n    }\n    \n    return interior;\n  }\n\n  protected renderBuildingSpecificElements(ctx: CanvasRenderingContext2D): void {\n    // Newman Library specific elements\n    \n    // Library circulation desk\n    ctx.fillStyle = '#8B4513'; // Brown wood\n    ctx.fillRect(320 - this.cameraX, 100 - this.cameraY, 160, 40);\n    \n    // Information desk sign\n    ctx.fillStyle = '#8B0000';\n    ctx.fillRect(380 - this.cameraX, 80 - this.cameraY, 40, 20);\n    ctx.fillStyle = 'white';\n    ctx.font = '10px monospace';\n    ctx.textAlign = 'center';\n    ctx.fillText('INFO', 400 - this.cameraX, 93 - this.cameraY);\n    \n    // Building name\n    ctx.fillStyle = '#FF8C00';\n    ctx.font = 'bold 16px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('NEWMAN LIBRARY', 400 - this.cameraX, 30 - this.cameraY);\n    \n    // Reading area signs\n    ctx.fillStyle = '#8B0000';\n    ctx.font = '12px serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('Quiet Study', 100 - this.cameraX, 150 - this.cameraY);\n    ctx.fillText('Computer Lab', 100 - this.cameraX, 110 - this.cameraY);\n    ctx.fillText('Research Collection', 500 - this.cameraX, 150 - this.cameraY);\n    \n    // Library carpet pattern\n    ctx.fillStyle = '#8B0000';\n    ctx.globalAlpha = 0.1;\n    for (let x = 0; x < 800; x += 40) {\n      for (let y = 0; y < 600; y += 40) {\n        ctx.fillRect(x - this.cameraX, y - this.cameraY, 20, 20);\n      }\n    }\n    ctx.globalAlpha = 1.0;\n    \n    // Book return slot\n    ctx.fillStyle = '#2F2F2F';\n    ctx.fillRect(50 - this.cameraX, 200 - this.cameraY, 30, 20);\n    ctx.fillStyle = 'white';\n    ctx.font = '8px monospace';\n    ctx.fillText('RETURNS', 55 - this.cameraX, 213 - this.cameraY);\n  }\n}\n\nexport default NewmanInterior;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1912, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/campus/TorgersenInterior.ts"],"sourcesContent":["import BaseBuildingInterior from './BaseBuildingInterior';\nimport { SceneType } from '../types';\n\nclass TorgersenInterior extends BaseBuildingInterior {\n  public type: SceneType = 'torgersen';\n\n  protected getBuildingName(): string {\n    return 'Torgersen Hall - College of Engineering';\n  }\n\n  protected generateInterior(): any[][] {\n    const interior: any[][] = [];\n    \n    for (let y = 0; y < this.roomHeight; y++) {\n      interior[y] = [];\n      for (let x = 0; x < this.roomWidth; x++) {\n        // Create the layout for Torgersen Engineering Hall\n        \n        // Outer walls\n        if (x === 0 || x === this.roomWidth - 1 || y === 0 || y === this.roomHeight - 1) {\n          interior[y][x] = { type: 'wall', solid: true };\n        }\n        // Exit door at bottom center\n        else if (y === this.roomHeight - 1 && x === Math.floor(this.roomWidth / 2)) {\n          interior[y][x] = { type: 'door', solid: false };\n        }\n        // Computer lab area (left side)\n        else if (x >= 2 && x <= 7 && y >= 2 && y <= 8 && (x + y) % 2 === 0) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'computer' };\n        }\n        // Engineering workbenches (right side)\n        else if (x >= 12 && x <= 17 && y >= 3 && y <= 6) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'desk' };\n        }\n        // Lab equipment area\n        else if (x >= 12 && x <= 17 && y >= 8 && y <= 11) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'table' };\n        }\n        // Chairs for workstations\n        else if ((x >= 2 && x <= 7 && y >= 2 && y <= 8 && (x + y) % 2 === 1) ||\n                 (x >= 11 && x <= 18 && (y === 2 || y === 7 || y === 12))) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'chair' };\n        }\n        // Windows along top\n        else if (y === 0 && (x === 3 || x === 7 || x === 13 || x === 17)) {\n          interior[y][x] = { type: 'window', solid: true };\n        }\n        // Floor\n        else {\n          interior[y][x] = { type: 'floor', solid: false };\n        }\n      }\n    }\n    \n    return interior;\n  }\n\n  protected renderBuildingSpecificElements(ctx: CanvasRenderingContext2D): void {\n    // Torgersen Hall Gothic Revival Architecture and Engineering Elements\n    \n    // Gothic architectural details on walls\n    this.renderGothicArchDetails(ctx);\n    \n    // Engineering lab equipment with more modern appearance\n    ctx.fillStyle = '#4A4A4A'; // Gray metal\n    ctx.fillRect(400 - this.cameraX, 250 - this.cameraY, 80, 40);\n    ctx.fillRect(500 - this.cameraX, 250 - this.cameraY, 80, 40);\n    \n    // Modern LCD screens\n    ctx.fillStyle = '#1E1E1E'; // Dark screen bezel\n    ctx.fillRect(405 - this.cameraX, 255 - this.cameraY, 30, 20);\n    ctx.fillRect(505 - this.cameraX, 255 - this.cameraY, 30, 20);\n    ctx.fillStyle = '#0066FF'; // Blue LCD screen\n    ctx.fillRect(407 - this.cameraX, 257 - this.cameraY, 26, 16);\n    ctx.fillRect(507 - this.cameraX, 257 - this.cameraY, 26, 16);\n    \n    // Building name with Gothic-inspired font styling\n    ctx.fillStyle = '#8B0000'; // VT Maroon\n    ctx.font = 'bold 18px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('TORGERSEN HALL', 400 - this.cameraX, 30 - this.cameraY);\n    ctx.fillStyle = '#FF8C00'; // VT Orange\n    ctx.font = 'bold 14px serif';\n    ctx.fillText('COLLEGE OF ENGINEERING', 400 - this.cameraX, 50 - this.cameraY);\n    ctx.fillStyle = '#C8B99C';\n    ctx.font = '10px serif';\n    ctx.fillText('EST. 1872 • VIRGINIA TECH', 400 - this.cameraX, 65 - this.cameraY);\n    \n    // Elegant departmental signs with Gothic styling\n    ctx.fillStyle = '#2F2F2F';\n    ctx.font = '14px serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('⚡ Electrical & Computer Engineering', 80 - this.cameraX, 100 - this.cameraY);\n    ctx.fillText('🔧 Mechanical Engineering Lab', 400 - this.cameraX, 200 - this.cameraY);\n    ctx.fillText('💻 Engineering Design Studio', 400 - this.cameraX, 320 - this.cameraY);\n    \n    // Gothic stone columns (decorative)\n    this.renderGothicColumns(ctx);\n    \n    // Advanced engineering elements\n    ctx.strokeStyle = '#4A4A4A';\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    // CAD workstation diagrams\n    ctx.moveTo(50 - this.cameraX, 140 - this.cameraY);\n    ctx.lineTo(150 - this.cameraX, 140 - this.cameraY);\n    ctx.lineTo(150 - this.cameraX, 180 - this.cameraY);\n    ctx.lineTo(50 - this.cameraX, 180 - this.cameraY);\n    ctx.closePath();\n    ctx.stroke();\n    \n    // VT Engineering logo with Gothic styling\n    ctx.fillStyle = '#8B0000';\n    ctx.fillRect(350 - this.cameraX, 75 - this.cameraY, 120, 50);\n    ctx.fillStyle = '#E8DCC6'; // Limestone color\n    ctx.fillRect(352 - this.cameraX, 77 - this.cameraY, 116, 46);\n    ctx.fillStyle = '#8B0000';\n    ctx.font = 'bold 16px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('VT', 410 - this.cameraX, 95 - this.cameraY);\n    ctx.font = 'bold 10px serif';\n    ctx.fillText('ENGINEERING', 410 - this.cameraX, 110 - this.cameraY);\n    ctx.fillText('EXCELLENCE', 410 - this.cameraX, 120 - this.cameraY);\n    \n    // Modern cable management with Gothic aesthetic\n    ctx.fillStyle = '#2F2F2F';\n    ctx.fillRect(0 - this.cameraX, 200 - this.cameraY, 800, 3);\n    ctx.fillRect(0 - this.cameraX, 300 - this.cameraY, 800, 3);\n    \n    // Stone floor pattern details\n    ctx.strokeStyle = '#C8B99C';\n    ctx.lineWidth = 1;\n    for (let x = 0; x < 800; x += 64) {\n      ctx.beginPath();\n      ctx.moveTo(x - this.cameraX, 0 - this.cameraY);\n      ctx.lineTo(x - this.cameraX, 600 - this.cameraY);\n      ctx.stroke();\n    }\n  }\n\n  private renderGothicArchDetails(ctx: CanvasRenderingContext2D): void {\n    // Gothic arch patterns on walls\n    ctx.strokeStyle = '#C8B99C';\n    ctx.lineWidth = 2;\n    \n    // Left wall arches\n    for (let i = 0; i < 3; i++) {\n      const x = 20 + i * 60;\n      const y = 120;\n      ctx.beginPath();\n      ctx.arc(x - this.cameraX, y - this.cameraY, 25, Math.PI, 0);\n      ctx.stroke();\n    }\n    \n    // Right wall arches\n    for (let i = 0; i < 3; i++) {\n      const x = 600 + i * 60;\n      const y = 120;\n      ctx.beginPath();\n      ctx.arc(x - this.cameraX, y - this.cameraY, 25, Math.PI, 0);\n      ctx.stroke();\n    }\n  }\n\n  private renderGothicColumns(ctx: CanvasRenderingContext2D): void {\n    // Gothic stone columns\n    ctx.fillStyle = '#E8DCC6'; // Limestone\n    \n    // Left columns\n    ctx.fillRect(30 - this.cameraX, 50 - this.cameraY, 12, 400);\n    ctx.fillRect(120 - this.cameraX, 50 - this.cameraY, 12, 400);\n    \n    // Right columns  \n    ctx.fillRect(650 - this.cameraX, 50 - this.cameraY, 12, 400);\n    ctx.fillRect(740 - this.cameraX, 50 - this.cameraY, 12, 400);\n    \n    // Column capitals (decorative tops)\n    ctx.fillStyle = '#D4C4A8';\n    ctx.fillRect(25 - this.cameraX, 45 - this.cameraY, 22, 10);\n    ctx.fillRect(115 - this.cameraX, 45 - this.cameraY, 22, 10);\n    ctx.fillRect(645 - this.cameraX, 45 - this.cameraY, 22, 10);\n    ctx.fillRect(735 - this.cameraX, 45 - this.cameraY, 22, 10);\n  }\n}\n\nexport default TorgersenInterior;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2094, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/campus/SquiresInterior.ts"],"sourcesContent":["import BaseBuildingInterior from './BaseBuildingInterior';\nimport { SceneType } from '../types';\n\nclass SquiresInterior extends BaseBuildingInterior {\n  public type: SceneType = 'squires';\n\n  protected getBuildingName(): string {\n    return 'Squires Student Center';\n  }\n\n  protected generateInterior(): any[][] {\n    const interior: any[][] = [];\n    \n    for (let y = 0; y < this.roomHeight; y++) {\n      interior[y] = [];\n      for (let x = 0; x < this.roomWidth; x++) {\n        // Create the layout for Squires Student Center\n        \n        // Outer walls\n        if (x === 0 || x === this.roomWidth - 1 || y === 0 || y === this.roomHeight - 1) {\n          interior[y][x] = { type: 'wall', solid: true };\n        }\n        // Exit door at bottom center\n        else if (y === this.roomHeight - 1 && x === Math.floor(this.roomWidth / 2)) {\n          interior[y][x] = { type: 'door', solid: false };\n        }\n        // Food court tables (center area)\n        else if ((x >= 6 && x <= 7 && y >= 5 && y <= 6) ||\n                 (x >= 9 && x <= 10 && y >= 5 && y <= 6) ||\n                 (x >= 12 && x <= 13 && y >= 5 && y <= 6) ||\n                 (x >= 6 && x <= 7 && y >= 8 && y <= 9) ||\n                 (x >= 9 && x <= 10 && y >= 8 && y <= 9) ||\n                 (x >= 12 && x <= 13 && y >= 8 && y <= 9)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'table' };\n        }\n        // Chairs around tables\n        else if ((x === 5 && (y === 5 || y === 8)) ||\n                 (x === 8 && (y === 5 || y === 8)) ||\n                 (x === 11 && (y === 5 || y === 8)) ||\n                 (x === 14 && (y === 5 || y === 8)) ||\n                 (x === 5 && (y === 6 || y === 9)) ||\n                 (x === 8 && (y === 6 || y === 9)) ||\n                 (x === 11 && (y === 6 || y === 9)) ||\n                 (x === 14 && (y === 6 || y === 9))) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'chair' };\n        }\n        // Student lounge area (left side)\n        else if ((x >= 2 && x <= 4 && y >= 3 && y <= 4) ||\n                 (x >= 2 && x <= 4 && y >= 10 && y <= 11)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'couch' };\n        }\n        // Information desk\n        else if (x >= 15 && x <= 17 && y >= 2 && y <= 3) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'desk' };\n        }\n        // Computer kiosks\n        else if ((x === 3 && y === 7) || (x === 16 && y === 7)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'computer' };\n        }\n        // Windows\n        else if (y === 0 && (x === 4 || x === 8 || x === 12 || x === 16)) {\n          interior[y][x] = { type: 'window', solid: true };\n        }\n        // Floor\n        else {\n          interior[y][x] = { type: 'floor', solid: false };\n        }\n      }\n    }\n    \n    return interior;\n  }\n\n  protected renderBuildingSpecificElements(ctx: CanvasRenderingContext2D): void {\n    // Squires Student Center specific elements\n    \n    // Building name\n    ctx.fillStyle = '#FF8C00';\n    ctx.font = 'bold 16px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('SQUIRES STUDENT CENTER', 400 - this.cameraX, 30 - this.cameraY);\n    \n    // Food court area\n    ctx.fillStyle = '#8B0000';\n    ctx.font = '14px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('FOOD COURT', 400 - this.cameraX, 55 - this.cameraY);\n    \n    // Student services signs\n    ctx.fillStyle = '#8B0000';\n    ctx.font = '12px sans-serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('Student Services', 500 - this.cameraX, 100 - this.cameraY);\n    ctx.fillText('Information Desk', 500 - this.cameraX, 120 - this.cameraY);\n    ctx.fillText('Student Lounge', 100 - this.cameraX, 150 - this.cameraY);\n    \n    // VT spirit decorations\n    ctx.fillStyle = '#8B0000';\n    ctx.fillRect(50 - this.cameraX, 50 - this.cameraY, 60, 40);\n    ctx.fillStyle = '#FF8C00';\n    ctx.fillRect(55 - this.cameraX, 55 - this.cameraY, 50, 30);\n    ctx.fillStyle = '#8B0000';\n    ctx.font = 'bold 16px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('GO', 70 - this.cameraX, 75 - this.cameraY);\n    ctx.fillText('HOKIES!', 85 - this.cameraX, 85 - this.cameraY);\n    \n    // Student announcements board\n    ctx.fillStyle = '#4A4A4A';\n    ctx.fillRect(600 - this.cameraX, 100 - this.cameraY, 120, 80);\n    ctx.fillStyle = 'white';\n    ctx.fillRect(610 - this.cameraX, 110 - this.cameraY, 100, 60);\n    ctx.fillStyle = '#8B0000';\n    ctx.font = '10px sans-serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('Student Events', 615 - this.cameraX, 125 - this.cameraY);\n    ctx.fillText('• Basketball Game', 615 - this.cameraX, 140 - this.cameraY);\n    ctx.fillText('• Club Fair', 615 - this.cameraX, 155 - this.cameraY);\n    ctx.fillText('• Study Groups', 615 - this.cameraX, 170 - this.cameraY);\n    \n    // Stylized floor pattern for student center\n    ctx.fillStyle = '#FF8C00';\n    ctx.globalAlpha = 0.1;\n    for (let x = 200; x < 600; x += 50) {\n      for (let y = 200; y < 400; y += 50) {\n        ctx.fillRect(x - this.cameraX, y - this.cameraY, 25, 25);\n      }\n    }\n    ctx.globalAlpha = 1.0;\n    \n    // Student center amenities\n    ctx.fillStyle = '#2F2F2F';\n    ctx.fillRect(150 - this.cameraX, 320 - this.cameraY, 40, 20);\n    ctx.fillStyle = 'white';\n    ctx.font = '8px monospace';\n    ctx.textAlign = 'center';\n    ctx.fillText('ATM', 170 - this.cameraX, 333 - this.cameraY);\n    \n    ctx.fillStyle = '#8B4513';\n    ctx.fillRect(250 - this.cameraX, 320 - this.cameraY, 40, 20);\n    ctx.fillStyle = 'white';\n    ctx.fillText('MAIL', 270 - this.cameraX, 333 - this.cameraY);\n  }\n}\n\nexport default SquiresInterior;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2235, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/off-campus/BaseOffCampusBuilding.ts"],"sourcesContent":["import Player from '../Player';\nimport { Scene, SceneType } from '../types';\n\ninterface ApartmentTile {\n  type: 'floor' | 'wall' | 'door' | 'furniture' | 'window' | 'stairs' | 'elevator' | 'lobby' | 'mailroom';\n  solid: boolean;\n  furniture?: 'couch' | 'table' | 'chair' | 'desk' | 'bed' | 'kitchen' | 'mailbox' | 'vending' | 'laundry';\n}\n\nabstract class BaseOffCampusBuilding implements Scene {\n  public abstract type: SceneType;\n  protected tileSize: number = 32;\n  protected buildingWidth: number = 20; // tiles\n  protected buildingHeight: number = 15; // tiles\n  protected tiles: ApartmentTile[][];\n  public cameraX: number = 0;\n  public cameraY: number = 0;\n  protected exitX: number = 320; // Default exit position\n  protected exitY: number = 450;\n\n  constructor() {\n    this.tiles = this.generateBuilding();\n  }\n\n  protected abstract generateBuilding(): ApartmentTile[][];\n  protected abstract getBuildingName(): string;\n  protected abstract getBuildingType(): 'apartment' | 'mixed_use' | 'commercial';\n\n  public canMoveTo(x: number, y: number, width: number, height: number): boolean {\n    // Convert pixel coordinates to tile coordinates\n    const leftTile = Math.floor(x / this.tileSize);\n    const rightTile = Math.floor((x + width - 1) / this.tileSize);\n    const topTile = Math.floor(y / this.tileSize);\n    const bottomTile = Math.floor((y + height - 1) / this.tileSize);\n\n    // Check all tiles that the entity overlaps\n    for (let tileY = topTile; tileY <= bottomTile; tileY++) {\n      for (let tileX = leftTile; tileX <= rightTile; tileX++) {\n        if (this.isTileSolid(tileX, tileY)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  private isTileSolid(tileX: number, tileY: number): boolean {\n    // Check bounds\n    if (tileX < 0 || tileX >= this.buildingWidth || tileY < 0 || tileY >= this.buildingHeight) {\n      return true; // Treat out-of-bounds as solid\n    }\n\n    return this.tiles[tileY][tileX].solid;\n  }\n\n  public update(deltaTime: number): void {\n    // Base update logic - can be overridden\n  }\n\n  public render(ctx: CanvasRenderingContext2D, player: Player): void {\n    // Simple camera that centers on the building\n    this.updateCamera(player);\n\n    // Clear with indoor background\n    ctx.fillStyle = '#F0F0F0'; // Light gray indoor background\n    ctx.fillRect(0, 0, 800, 600);\n\n    // Render visible tiles\n    const startTileX = Math.max(0, Math.floor(this.cameraX / this.tileSize));\n    const endTileX = Math.min(this.buildingWidth - 1, Math.floor((this.cameraX + 800) / this.tileSize));\n    const startTileY = Math.max(0, Math.floor(this.cameraY / this.tileSize));\n    const endTileY = Math.min(this.buildingHeight - 1, Math.floor((this.cameraY + 600) / this.tileSize));\n\n    for (let tileY = startTileY; tileY <= endTileY; tileY++) {\n      for (let tileX = startTileX; tileX <= endTileX; tileX++) {\n        const tile = this.tiles[tileY][tileX];\n        const x = tileX * this.tileSize - this.cameraX;\n        const y = tileY * this.tileSize - this.cameraY;\n\n        this.renderTile(ctx, tile, x, y);\n      }\n    }\n\n    // Render building-specific elements\n    this.renderBuildingSpecificElements(ctx);\n  }\n\n  protected abstract renderBuildingSpecificElements(ctx: CanvasRenderingContext2D): void;\n\n  private updateCamera(player: Player): void {\n    // Keep camera centered on building\n    const targetCameraX = Math.max(0, Math.min(this.buildingWidth * this.tileSize - 800, 0));\n    const targetCameraY = Math.max(0, Math.min(this.buildingHeight * this.tileSize - 600, 0));\n\n    this.cameraX = targetCameraX;\n    this.cameraY = targetCameraY;\n  }\n\n  private renderTile(ctx: CanvasRenderingContext2D, tile: ApartmentTile, x: number, y: number): void {\n    switch (tile.type) {\n      case 'floor':\n        this.renderFloorTile(ctx, x, y);\n        break;\n      case 'wall':\n        this.renderWallTile(ctx, x, y);\n        break;\n      case 'door':\n        this.renderDoorTile(ctx, x, y);\n        break;\n      case 'furniture':\n        this.renderFurnitureTile(ctx, tile, x, y);\n        break;\n      case 'window':\n        this.renderWindowTile(ctx, x, y);\n        break;\n      case 'lobby':\n        this.renderLobbyTile(ctx, x, y);\n        break;\n      case 'mailroom':\n        this.renderMailroomTile(ctx, x, y);\n        break;\n      case 'elevator':\n        this.renderElevatorTile(ctx, x, y);\n        break;\n      case 'stairs':\n        this.renderStairsTile(ctx, x, y);\n        break;\n    }\n  }\n\n  protected renderFloorTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Modern apartment flooring\n    ctx.fillStyle = '#E8E8E8'; // Light gray\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    \n    // Floor pattern\n    ctx.fillStyle = '#DCDCDC';\n    ctx.fillRect(x + 1, y + 1, this.tileSize - 2, this.tileSize - 2);\n  }\n\n  protected renderWallTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Modern apartment walls\n    ctx.fillStyle = '#FFFFFF'; // White walls\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    \n    // Wall trim\n    ctx.fillStyle = '#D3D3D3';\n    ctx.fillRect(x, y, this.tileSize, 2);\n    ctx.fillRect(x, y + this.tileSize - 2, this.tileSize, 2);\n  }\n\n  protected renderDoorTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Floor base\n    this.renderFloorTile(ctx, x, y);\n    \n    // Exit indicator\n    ctx.fillStyle = '#32CD32'; // Lime green\n    ctx.fillRect(x + 8, y + 8, 16, 16);\n    \n    // Exit text\n    ctx.fillStyle = 'white';\n    ctx.font = '8px monospace';\n    ctx.fillText('EXIT', x + 10, y + 18);\n  }\n\n  protected renderFurnitureTile(ctx: CanvasRenderingContext2D, tile: ApartmentTile, x: number, y: number): void {\n    // Floor base\n    this.renderFloorTile(ctx, x, y);\n    \n    // Furniture based on type\n    switch (tile.furniture) {\n      case 'couch':\n        ctx.fillStyle = '#8B4513'; // Brown\n        ctx.fillRect(x + 2, y + 8, 28, 16);\n        ctx.fillStyle = '#A0522D'; // Lighter brown for cushions\n        ctx.fillRect(x + 4, y + 10, 6, 12);\n        ctx.fillRect(x + 12, y + 10, 6, 12);\n        ctx.fillRect(x + 20, y + 10, 6, 12);\n        break;\n      case 'bed':\n        ctx.fillStyle = '#8B4513'; // Brown bed frame\n        ctx.fillRect(x + 2, y + 4, 28, 24);\n        ctx.fillStyle = '#FFFFFF'; // White sheets\n        ctx.fillRect(x + 4, y + 6, 24, 20);\n        ctx.fillStyle = '#FFB6C1'; // Pink pillow\n        ctx.fillRect(x + 6, y + 8, 8, 6);\n        break;\n      case 'kitchen':\n        ctx.fillStyle = '#2F4F4F'; // Dark slate gray\n        ctx.fillRect(x + 2, y + 2, 28, 14);\n        ctx.fillStyle = '#4169E1'; // Blue for appliances\n        ctx.fillRect(x + 4, y + 4, 8, 10);\n        ctx.fillStyle = '#C0C0C0'; // Silver for sink\n        ctx.fillRect(x + 14, y + 4, 8, 10);\n        break;\n      case 'mailbox':\n        ctx.fillStyle = '#4682B4'; // Steel blue\n        ctx.fillRect(x + 8, y + 8, 16, 16);\n        ctx.fillStyle = '#FFD700'; // Gold for handles\n        ctx.fillRect(x + 12, y + 14, 8, 2);\n        break;\n      case 'vending':\n        ctx.fillStyle = '#FF4500'; // Orange red\n        ctx.fillRect(x + 4, y + 2, 24, 28);\n        ctx.fillStyle = '#000000'; // Black for display\n        ctx.fillRect(x + 6, y + 4, 20, 12);\n        ctx.fillStyle = '#FFFFFF'; // White for buttons\n        ctx.fillRect(x + 8, y + 18, 4, 4);\n        ctx.fillRect(x + 14, y + 18, 4, 4);\n        ctx.fillRect(x + 20, y + 18, 4, 4);\n        break;\n      case 'laundry':\n        ctx.fillStyle = '#FFFFFF'; // White washers/dryers\n        ctx.fillRect(x + 2, y + 4, 12, 24);\n        ctx.fillRect(x + 18, y + 4, 12, 24);\n        ctx.fillStyle = '#000000'; // Black for doors\n        ctx.fillRect(x + 4, y + 6, 8, 8);\n        ctx.fillRect(x + 20, y + 6, 8, 8);\n        break;\n      default:\n        ctx.fillStyle = '#8B4513'; // Default brown furniture\n        ctx.fillRect(x + 4, y + 4, 24, 24);\n    }\n  }\n\n  protected renderWindowTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Wall base\n    this.renderWallTile(ctx, x, y);\n    \n    // Window\n    ctx.fillStyle = '#87CEEB'; // Sky blue\n    ctx.fillRect(x + 4, y + 4, 24, 24);\n    \n    // Window frame\n    ctx.fillStyle = '#A0522D'; // Brown frame\n    ctx.fillRect(x + 2, y + 2, 28, 4);\n    ctx.fillRect(x + 2, y + 26, 28, 4);\n    ctx.fillRect(x + 2, y + 2, 4, 28);\n    ctx.fillRect(x + 26, y + 2, 4, 28);\n    \n    // Window cross\n    ctx.fillRect(x + 14, y + 4, 4, 24);\n    ctx.fillRect(x + 4, y + 14, 24, 4);\n  }\n\n  protected renderLobbyTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Fancy lobby flooring\n    ctx.fillStyle = '#F5F5DC'; // Beige\n    ctx.fillRect(x, y, this.tileSize, this.tileSize);\n    \n    // Marble pattern\n    ctx.fillStyle = '#DDBEA9';\n    ctx.fillRect(x + 2, y + 2, this.tileSize - 4, this.tileSize - 4);\n    \n    // Decorative border\n    ctx.fillStyle = '#CD853F';\n    ctx.fillRect(x, y, this.tileSize, 2);\n    ctx.fillRect(x, y + this.tileSize - 2, this.tileSize, 2);\n    ctx.fillRect(x, y, 2, this.tileSize);\n    ctx.fillRect(x + this.tileSize - 2, y, 2, this.tileSize);\n  }\n\n  protected renderMailroomTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Floor base\n    this.renderFloorTile(ctx, x, y);\n    \n    // Mailroom equipment\n    ctx.fillStyle = '#4682B4'; // Steel blue\n    ctx.fillRect(x + 4, y + 4, 24, 24);\n    \n    // Mail slots\n    ctx.fillStyle = '#000000';\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        ctx.fillRect(x + 6 + j * 6, y + 6 + i * 6, 4, 4);\n      }\n    }\n  }\n\n  protected renderElevatorTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Floor base\n    this.renderFloorTile(ctx, x, y);\n    \n    // Elevator doors\n    ctx.fillStyle = '#C0C0C0'; // Silver\n    ctx.fillRect(x + 6, y + 4, 10, 24);\n    ctx.fillRect(x + 16, y + 4, 10, 24);\n    \n    // Elevator buttons\n    ctx.fillStyle = '#FFD700'; // Gold\n    ctx.fillRect(x + 28, y + 12, 2, 2);\n    ctx.fillRect(x + 28, y + 16, 2, 2);\n  }\n\n  protected renderStairsTile(ctx: CanvasRenderingContext2D, x: number, y: number): void {\n    // Floor base\n    this.renderFloorTile(ctx, x, y);\n    \n    // Stairs\n    ctx.fillStyle = '#808080'; // Gray\n    for (let i = 0; i < 4; i++) {\n      ctx.fillRect(x + 2, y + 4 + i * 6, 28 - i * 6, 4);\n    }\n    \n    // Handrail\n    ctx.fillStyle = '#8B4513'; // Brown\n    ctx.fillRect(x + 2, y + 4, 2, 24);\n  }\n\n  public getExitPosition(): { x: number, y: number, scene: SceneType } {\n    return { x: this.exitX, y: this.exitY, scene: 'campus' };\n  }\n\n  public getEntrancePosition(): { x: number, y: number } {\n    return { x: this.exitX, y: this.exitY - 50 }; // Enter slightly above exit\n  }\n}\n\nexport default BaseOffCampusBuilding;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2510, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/off-campus/TotsUpstairs.ts"],"sourcesContent":["import BaseOffCampusBuilding from './BaseOffCampusBuilding';\nimport { SceneType } from '../types';\n\nclass TotsUpstairs extends BaseOffCampusBuilding {\n  public type: SceneType = 'tots_upstairs';\n\n  protected getBuildingName(): string {\n    return 'Tots - Dance Floor & Photo Spot (Upstairs)';\n  }\n\n  protected getBuildingType(): 'apartment' | 'mixed_use' | 'commercial' {\n    return 'commercial';\n  }\n\n  protected generateBuilding(): any[][] {\n    const interior: any[][] = [];\n    \n    for (let y = 0; y < this.buildingHeight; y++) {\n      interior[y] = [];\n      for (let x = 0; x < this.buildingWidth; x++) {\n        // Create the layout for Tots upstairs\n        \n        // Outer walls\n        if (x === 0 || x === this.buildingWidth - 1 || y === 0 || y === this.buildingHeight - 1) {\n          interior[y][x] = { type: 'wall', solid: true };\n        }\n        // Stairs down (back right)\n        else if (x >= 16 && x <= 18 && y >= 2 && y <= 5) {\n          interior[y][x] = { type: 'stairs', solid: false };\n        }\n        // VT photo spot area (left half) - mostly open space with some furniture for photo staging\n        else if (x >= 2 && x <= 3 && y >= 6 && y <= 7) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'couch' };\n        }\n        else if (x >= 2 && x <= 3 && y >= 10 && y <= 11) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'couch' };\n        }\n        // Small cocktail tables for drinks in photo area\n        else if ((x === 5 && y === 8) || (x === 5 && y === 12)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'table' };\n        }\n        // Dance floor area (right half) - mostly open space\n        else if ((x === 12 && y === 8) || (x === 12 && y === 11)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'table' };\n        }\n        // DJ booth for dance floor\n        else if (x >= 14 && x <= 15 && y >= 12 && y <= 13) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'desk' };\n        }\n        // Windows along front\n        else if (y === 0 && (x === 5 || x === 9 || x === 13)) {\n          interior[y][x] = { type: 'window', solid: true };\n        }\n        // Floor - everything else is open dance floor and photo space\n        else {\n          interior[y][x] = { type: 'floor', solid: false };\n        }\n      }\n    }\n    \n    return interior;\n  }\n\n  protected renderBuildingSpecificElements(ctx: CanvasRenderingContext2D): void {\n    // Tots upstairs specific elements\n    \n    // Venue name\n    ctx.fillStyle = '#FF6B35'; // Orange branding\n    ctx.font = 'bold 18px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('TOTS UPSTAIRS', 400 - this.cameraX, 35 - this.cameraY);\n    \n    ctx.fillStyle = '#2E86AB';\n    ctx.font = 'bold 12px serif';\n    ctx.fillText('Dance Floor & VT Photo Spot', 400 - this.cameraX, 55 - this.cameraY);\n    \n    // Massive VT sign (photo spot area - left half)\n    const vtSignX = 200;\n    const vtSignY = 200;\n    const signWidth = 180;\n    const signHeight = 120;\n    \n    // VT sign background\n    ctx.fillStyle = '#8B0000'; // VT Maroon background\n    ctx.fillRect(vtSignX - this.cameraX, vtSignY - this.cameraY, signWidth, signHeight);\n    \n    // Orange neon border effect\n    ctx.strokeStyle = '#FF8C00'; // VT Orange neon\n    ctx.lineWidth = 8;\n    ctx.strokeRect(vtSignX - 4 - this.cameraX, vtSignY - 4 - this.cameraY, signWidth + 8, signHeight + 8);\n    \n    // Inner orange glow\n    ctx.strokeStyle = '#FFB347'; // Lighter orange\n    ctx.lineWidth = 4;\n    ctx.strokeRect(vtSignX - 2 - this.cameraX, vtSignY - 2 - this.cameraY, signWidth + 4, signHeight + 4);\n    \n    // VT Letters\n    ctx.fillStyle = '#FF8C00'; // VT Orange\n    ctx.font = 'bold 72px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('VT', vtSignX + signWidth/2 - this.cameraX, vtSignY + signHeight/2 + 25 - this.cameraY);\n    \n    // Orange neon glow effect around letters\n    ctx.shadowColor = '#FF8C00';\n    ctx.shadowBlur = 20;\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = 'bold 72px serif';\n    ctx.fillText('VT', vtSignX + signWidth/2 - this.cameraX, vtSignY + signHeight/2 + 25 - this.cameraY);\n    ctx.shadowBlur = 0;\n    \n    // \"PHOTO SPOT\" text below VT sign\n    ctx.fillStyle = '#FFD700'; // Gold\n    ctx.font = 'bold 16px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('📸 PHOTO SPOT 📸', vtSignX + signWidth/2 - this.cameraX, vtSignY + signHeight + 25 - this.cameraY);\n    \n    // Photo area decorations\n    ctx.fillStyle = '#8B0000';\n    ctx.fillRect(50 - this.cameraX, 150 - this.cameraY, 30, 30);\n    ctx.fillStyle = '#FF8C00';\n    ctx.fillRect(55 - this.cameraX, 155 - this.cameraY, 20, 20);\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = 'bold 12px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('VT', 65 - this.cameraX, 168 - this.cameraY);\n    \n    // Dance floor area (right half)\n    ctx.fillStyle = '#2E86AB';\n    ctx.font = 'bold 16px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('🕺 DANCE FLOOR 💃', 550 - this.cameraX, 150 - this.cameraY);\n    \n    // Dance floor lighting\n    const time = Date.now() * 0.003;\n    const danceColors = ['#FF6B35', '#2E86AB', '#FF8C00', '#8B0000'];\n    \n    // Animated dance floor spots\n    for (let i = 0; i < 4; i++) {\n      const x = 450 + (i % 2) * 80;\n      const y = 200 + Math.floor(i / 2) * 80;\n      const colorIndex = Math.floor(time + i) % danceColors.length;\n      \n      ctx.fillStyle = danceColors[colorIndex];\n      ctx.globalAlpha = 0.4 + 0.3 * Math.sin(time * 3 + i);\n      ctx.beginPath();\n      ctx.arc(x - this.cameraX, y - this.cameraY, 35, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n    ctx.globalAlpha = 1.0;\n    \n    // DJ booth equipment\n    ctx.fillStyle = '#2F2F2F';\n    ctx.fillRect(460 - this.cameraX, 380 - this.cameraY, 80, 40);\n    \n    // DJ turntables\n    ctx.fillStyle = '#C0C0C0';\n    ctx.beginPath();\n    ctx.arc(480 - this.cameraX, 400 - this.cameraY, 12, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.arc(520 - this.cameraX, 400 - this.cameraY, 12, 0, 2 * Math.PI);\n    ctx.fill();\n    \n    // DJ mixer\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(485 - this.cameraX, 395 - this.cameraY, 30, 10);\n    \n    // Stairs visualization (going down)\n    ctx.fillStyle = '#8B4513'; // Brown wood stairs\n    ctx.fillRect(520 - this.cameraX, 80 - this.cameraY, 80, 120);\n    \n    // Individual stair steps (going down)\n    for (let i = 0; i < 6; i++) {\n      ctx.fillStyle = '#A0522D';\n      ctx.fillRect(525 - this.cameraX, 190 - i * 18 - this.cameraY, 70 - (5-i) * 8, 15);\n    }\n    \n    // Stair railing\n    ctx.fillStyle = '#654321';\n    ctx.fillRect(522 - this.cameraX, 80 - this.cameraY, 3, 120);\n    ctx.fillRect(597 - this.cameraX, 140 - this.cameraY, 3, 60);\n    \n    // \"DOWNSTAIRS\" sign\n    ctx.fillStyle = '#FF6B35';\n    ctx.fillRect(530 - this.cameraX, 210 - this.cameraY, 60, 15);\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '10px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('DOWNSTAIRS', 560 - this.cameraX, 220 - this.cameraY);\n    \n    // Overhead party lighting\n    ctx.fillStyle = '#FFD700';\n    for (let x = 100; x < 700; x += 100) {\n      ctx.beginPath();\n      ctx.arc(x - this.cameraX, 100 - this.cameraY, 6, 0, 2 * Math.PI);\n      ctx.fill();\n      \n      // Light beams\n      ctx.fillStyle = '#FFFF00';\n      ctx.globalAlpha = 0.1;\n      ctx.beginPath();\n      ctx.moveTo(x - this.cameraX, 100 - this.cameraY);\n      ctx.lineTo(x - 20 - this.cameraX, 300 - this.cameraY);\n      ctx.lineTo(x + 20 - this.cameraX, 300 - this.cameraY);\n      ctx.closePath();\n      ctx.fill();\n      ctx.globalAlpha = 1.0;\n      ctx.fillStyle = '#FFD700';\n    }\n    \n    // VT spirit decorations around the room\n    ctx.fillStyle = '#8B0000';\n    ctx.font = '20px serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('🏈', 50 - this.cameraX, 400 - this.cameraY);\n    ctx.fillText('🏈', 650 - this.cameraX, 350 - this.cameraY);\n    \n    ctx.fillStyle = '#FF8C00';\n    ctx.fillText('🦃', 680 - this.cameraX, 200 - this.cameraY);\n    ctx.fillText('🦃', 80 - this.cameraX, 350 - this.cameraY);\n    \n    // Floor boundary between photo area and dance floor\n    ctx.strokeStyle = '#FFD700';\n    ctx.lineWidth = 4;\n    ctx.beginPath();\n    ctx.moveTo(400 - this.cameraX, 150 - this.cameraY);\n    ctx.lineTo(400 - this.cameraX, 450 - this.cameraY);\n    ctx.stroke();\n    \n    // \"Go Hokies!\" text\n    ctx.fillStyle = '#8B0000';\n    ctx.font = 'bold 14px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('GO HOKIES!', 600 - this.cameraX, 450 - this.cameraY);\n  }\n\n  // Override exit position to go back downstairs\n  public getExitPosition(): { x: number, y: number, scene: SceneType } {\n    return { x: this.exitX, y: this.exitY, scene: 'tots' };\n  }\n}\n\nexport default TotsUpstairs;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2750, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/off-campus/HokieHouseInterior.ts"],"sourcesContent":["import BaseOffCampusBuilding from './BaseOffCampusBuilding';\nimport { SceneType } from '../types';\n\nclass HokieHouseInterior extends BaseOffCampusBuilding {\n  public type: SceneType = 'hokiehouse';\n\n  protected getBuildingName(): string {\n    return 'Hokie House - VT Sports Bar & Grill';\n  }\n\n  protected getBuildingType(): 'apartment' | 'mixed_use' | 'commercial' {\n    return 'commercial';\n  }\n\n  protected generateBuilding(): any[][] {\n    const interior: any[][] = [];\n    \n    for (let y = 0; y < this.buildingHeight; y++) {\n      interior[y] = [];\n      for (let x = 0; x < this.buildingWidth; x++) {\n        // Create the layout for Hokie House sports bar\n        \n        // Outer walls\n        if (x === 0 || x === this.buildingWidth - 1 || y === 0 || y === this.buildingHeight - 1) {\n          interior[y][x] = { type: 'wall', solid: true };\n        }\n        // Exit door at bottom center\n        else if (y === this.buildingHeight - 1 && x === Math.floor(this.buildingWidth / 2)) {\n          interior[y][x] = { type: 'door', solid: false };\n        }\n        // Bar area (left side)\n        else if (x >= 2 && x <= 4 && y >= 3 && y <= 10) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'desk' };\n        }\n        // Bar stools\n        else if (x === 5 && y >= 3 && y <= 10 && y % 2 === 1) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'chair' };\n        }\n        // Kitchen area (back right)\n        else if (x >= 14 && x <= 17 && y >= 2 && y <= 6) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'kitchen' };\n        }\n        // Dining booths (right side)\n        else if ((x >= 12 && x <= 13 && y >= 8 && y <= 9) ||\n                 (x >= 12 && x <= 13 && y >= 11 && y <= 12)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'couch' };\n        }\n        // Booth tables\n        else if ((x === 14 && (y === 8 || y === 11))) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'table' };\n        }\n        // High-top tables (center area)\n        else if ((x >= 7 && x <= 8 && y >= 6 && y <= 7) ||\n                 (x >= 7 && x <= 8 && y >= 9 && y <= 10) ||\n                 (x >= 9 && x <= 10 && y >= 6 && y <= 7) ||\n                 (x >= 9 && x <= 10 && y >= 9 && y <= 10)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'table' };\n        }\n        // High-top chairs\n        else if ((x === 6 && (y === 6 || y === 9)) ||\n                 (x === 11 && (y === 6 || y === 9))) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'chair' };\n        }\n        // Windows along front\n        else if (y === 0 && (x === 6 || x === 10 || x === 14)) {\n          interior[y][x] = { type: 'window', solid: true };\n        }\n        // Floor\n        else {\n          interior[y][x] = { type: 'floor', solid: false };\n        }\n      }\n    }\n    \n    return interior;\n  }\n\n  protected renderBuildingSpecificElements(ctx: CanvasRenderingContext2D): void {\n    // Hokie House sports bar specific elements\n    \n    // Restaurant name and VT branding\n    ctx.fillStyle = '#8B0000'; // VT Maroon\n    ctx.font = 'bold 20px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('HOKIE HOUSE', 400 - this.cameraX, 35 - this.cameraY);\n    \n    ctx.fillStyle = '#FF8C00'; // VT Orange\n    ctx.font = 'bold 14px serif';\n    ctx.fillText('Sports Bar & Grill', 400 - this.cameraX, 55 - this.cameraY);\n    \n    // TV screens for sports viewing\n    ctx.fillStyle = '#000000'; // Black TV frames\n    ctx.fillRect(50 - this.cameraX, 100 - this.cameraY, 80, 60);\n    ctx.fillRect(300 - this.cameraX, 80 - this.cameraY, 100, 75);\n    ctx.fillRect(550 - this.cameraX, 100 - this.cameraY, 80, 60);\n    \n    // TV screens\n    ctx.fillStyle = '#00FF00'; // Green for football field\n    ctx.fillRect(55 - this.cameraX, 105 - this.cameraY, 70, 50);\n    ctx.fillRect(305 - this.cameraX, 85 - this.cameraY, 90, 65);\n    ctx.fillRect(555 - this.cameraX, 105 - this.cameraY, 70, 50);\n    \n    // VT on TV screens\n    ctx.fillStyle = '#8B0000';\n    ctx.font = 'bold 12px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('VT', 90 - this.cameraX, 135 - this.cameraY);\n    ctx.fillText('HOKIES', 350 - this.cameraX, 125 - this.cameraY);\n    ctx.fillText('VT', 590 - this.cameraX, 135 - this.cameraY);\n    \n    // Bar back with bottles\n    ctx.fillStyle = '#8B4513'; // Brown bar back\n    ctx.fillRect(50 - this.cameraX, 180 - this.cameraY, 80, 40);\n    \n    // Liquor bottles\n    ctx.fillStyle = '#228B22'; // Green bottles\n    ctx.fillRect(55 - this.cameraX, 185 - this.cameraY, 4, 15);\n    ctx.fillRect(65 - this.cameraX, 185 - this.cameraY, 4, 15);\n    ctx.fillRect(75 - this.cameraX, 185 - this.cameraY, 4, 15);\n    \n    ctx.fillStyle = '#8B4513'; // Brown bottles\n    ctx.fillRect(85 - this.cameraX, 185 - this.cameraY, 4, 15);\n    ctx.fillRect(95 - this.cameraX, 185 - this.cameraY, 4, 15);\n    ctx.fillRect(105 - this.cameraX, 185 - this.cameraY, 4, 15);\n    \n    // VT memorabilia and decorations\n    ctx.fillStyle = '#8B0000';\n    ctx.fillRect(200 - this.cameraX, 120 - this.cameraY, 60, 40);\n    ctx.fillStyle = '#FF8C00';\n    ctx.fillRect(205 - this.cameraX, 125 - this.cameraY, 50, 30);\n    ctx.fillStyle = '#8B0000';\n    ctx.font = 'bold 16px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('VT', 230 - this.cameraX, 145 - this.cameraY);\n    \n    // VT pennant\n    ctx.fillStyle = '#8B0000';\n    ctx.beginPath();\n    ctx.moveTo(500 - this.cameraX, 180 - this.cameraY);\n    ctx.lineTo(580 - this.cameraX, 190 - this.cameraY);\n    ctx.lineTo(500 - this.cameraX, 200 - this.cameraY);\n    ctx.closePath();\n    ctx.fill();\n    \n    ctx.fillStyle = '#FF8C00';\n    ctx.font = 'bold 10px serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('HOKIES', 510 - this.cameraX, 195 - this.cameraY);\n    \n    // Menu specials board\n    ctx.fillStyle = '#2F2F2F';\n    ctx.fillRect(450 - this.cameraX, 250 - this.cameraY, 120, 100);\n    \n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '12px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('GAME DAY SPECIALS', 510 - this.cameraX, 270 - this.cameraY);\n    \n    ctx.font = '10px sans-serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('• Hokie Wings ....... $12', 460 - this.cameraX, 290 - this.cameraY);\n    ctx.fillText('• Turkey Legs ...... $15', 460 - this.cameraX, 305 - this.cameraY);\n    ctx.fillText('• Hokie Burger ..... $14', 460 - this.cameraX, 320 - this.cameraY);\n    ctx.fillText('• Maroon & Orange', 460 - this.cameraX, 335 - this.cameraY);\n    ctx.fillText('  Nachos ........... $10', 460 - this.cameraX, 345 - this.cameraY);\n    \n    // Hokie Bird logo on floor\n    ctx.fillStyle = '#8B0000';\n    ctx.globalAlpha = 0.3;\n    ctx.beginPath();\n    ctx.arc(400 - this.cameraX, 350 - this.cameraY, 40, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.globalAlpha = 1.0;\n    \n    ctx.fillStyle = '#FF8C00';\n    ctx.font = 'bold 20px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('🦃', 400 - this.cameraX, 360 - this.cameraY);\n    \n    // Beer taps\n    ctx.fillStyle = '#C0C0C0'; // Silver taps\n    ctx.fillRect(70 - this.cameraX, 160 - this.cameraY, 4, 15);\n    ctx.fillRect(80 - this.cameraX, 160 - this.cameraY, 4, 15);\n    ctx.fillRect(90 - this.cameraX, 160 - this.cameraY, 4, 15);\n    ctx.fillRect(100 - this.cameraX, 160 - this.cameraY, 4, 15);\n    \n    // Tap handles\n    ctx.fillStyle = '#8B0000';\n    ctx.fillRect(68 - this.cameraX, 155 - this.cameraY, 8, 6);\n    ctx.fillStyle = '#FF8C00';\n    ctx.fillRect(78 - this.cameraX, 155 - this.cameraY, 8, 6);\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(88 - this.cameraX, 155 - this.cameraY, 8, 6);\n    ctx.fillRect(98 - this.cameraX, 155 - this.cameraY, 8, 6);\n  }\n}\n\nexport default HokieHouseInterior;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2944, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/off-campus/CentrosInterior.ts"],"sourcesContent":["import BaseOffCampusBuilding from './BaseOffCampusBuilding';\nimport { SceneType } from '../types';\n\nclass CentrosInterior extends BaseOffCampusBuilding {\n  public type: SceneType = 'centros';\n\n  protected getBuildingName(): string {\n    return 'Centros - Dance Club';\n  }\n\n  protected getBuildingType(): 'apartment' | 'mixed_use' | 'commercial' {\n    return 'commercial';\n  }\n\n  protected generateBuilding(): any[][] {\n    const interior: any[][] = [];\n    \n    for (let y = 0; y < this.buildingHeight; y++) {\n      interior[y] = [];\n      for (let x = 0; x < this.buildingWidth; x++) {\n        // Create the layout for Centros Dance Club\n        \n        // Outer walls\n        if (x === 0 || x === this.buildingWidth - 1 || y === 0 || y === this.buildingHeight - 1) {\n          interior[y][x] = { type: 'wall', solid: true };\n        }\n        // Exit door at bottom center\n        else if (y === this.buildingHeight - 1 && x === Math.floor(this.buildingWidth / 2)) {\n          interior[y][x] = { type: 'door', solid: false };\n        }\n        // DJ booth (back center)\n        else if (x >= 8 && x <= 11 && y >= 2 && y <= 4) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'desk' };\n        }\n        // Bar area (back left)\n        else if (x >= 2 && x <= 6 && y >= 2 && y <= 3) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'desk' };\n        }\n        // Bar stools\n        else if (x >= 2 && x <= 6 && y === 4) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'chair' };\n        }\n        // Coat check area\n        else if (x === 1 && y >= 11 && y <= 12) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'desk' };\n        }\n        // Standing cocktail tables around dance floor\n        else if ((x === 4 && y === 10) ||\n                 (x === 16 && y === 10) ||\n                 (x === 4 && y === 7) ||\n                 (x === 16 && y === 7)) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'table' };\n        }\n        // Security/bouncer area near entrance\n        else if (x >= 17 && x <= 18 && y >= 12 && y <= 13) {\n          interior[y][x] = { type: 'furniture', solid: true, furniture: 'desk' };\n        }\n        // Windows (tinted for club atmosphere)\n        else if (y === 0 && (x === 5 || x === 9 || x === 13 || x === 17)) {\n          interior[y][x] = { type: 'window', solid: true };\n        }\n        // Dance floor (open space in center) - Floor\n        else {\n          interior[y][x] = { type: 'floor', solid: false };\n        }\n      }\n    }\n    \n    return interior;\n  }\n\n  protected renderBuildingSpecificElements(ctx: CanvasRenderingContext2D): void {\n    // Centros Dance Club specific elements\n    \n    // Club name with neon styling\n    ctx.fillStyle = '#FF1493'; // Deep pink neon\n    ctx.font = 'bold 24px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('CENTROS', 400 - this.cameraX, 35 - this.cameraY);\n    \n    ctx.fillStyle = '#00FFFF'; // Cyan neon\n    ctx.font = 'bold 14px serif';\n    ctx.fillText('DANCE CLUB', 400 - this.cameraX, 55 - this.cameraY);\n    \n    // DJ booth with equipment\n    ctx.fillStyle = '#2F2F2F'; // Dark DJ booth\n    ctx.fillRect(280 - this.cameraX, 75 - this.cameraY, 130, 80);\n    \n    // DJ turntables\n    ctx.fillStyle = '#C0C0C0'; // Silver turntables\n    ctx.beginPath();\n    ctx.arc(310 - this.cameraX, 110 - this.cameraY, 15, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.arc(380 - this.cameraX, 110 - this.cameraY, 15, 0, 2 * Math.PI);\n    ctx.fill();\n    \n    // DJ mixer\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(330 - this.cameraX, 100 - this.cameraY, 40, 20);\n    \n    // DJ controls/sliders\n    ctx.fillStyle = '#FF0000';\n    ctx.fillRect(335 - this.cameraX, 105 - this.cameraY, 2, 10);\n    ctx.fillRect(345 - this.cameraX, 105 - this.cameraY, 2, 10);\n    ctx.fillRect(355 - this.cameraX, 105 - this.cameraY, 2, 10);\n    ctx.fillRect(365 - this.cameraX, 105 - this.cameraY, 2, 10);\n    \n    // Speakers (large ones)\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(50 - this.cameraX, 80 - this.cameraY, 30, 60);\n    ctx.fillRect(720 - this.cameraX, 80 - this.cameraY, 30, 60);\n    \n    // Speaker cones\n    ctx.fillStyle = '#444444';\n    ctx.beginPath();\n    ctx.arc(65 - this.cameraX, 100 - this.cameraY, 12, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.arc(65 - this.cameraX, 120 - this.cameraY, 8, 0, 2 * Math.PI);\n    ctx.fill();\n    \n    ctx.beginPath();\n    ctx.arc(735 - this.cameraX, 100 - this.cameraY, 12, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.arc(735 - this.cameraX, 120 - this.cameraY, 8, 0, 2 * Math.PI);\n    ctx.fill();\n    \n    // Bar area with bottles\n    ctx.fillStyle = '#8B4513'; // Wood bar\n    ctx.fillRect(80 - this.cameraX, 80 - this.cameraY, 150, 30);\n    \n    // Liquor bottles on bar\n    ctx.fillStyle = '#228B22'; // Green bottles\n    ctx.fillRect(90 - this.cameraX, 70 - this.cameraY, 4, 15);\n    ctx.fillRect(100 - this.cameraX, 70 - this.cameraY, 4, 15);\n    ctx.fillRect(110 - this.cameraX, 70 - this.cameraY, 4, 15);\n    \n    ctx.fillStyle = '#8B4513'; // Brown bottles\n    ctx.fillRect(120 - this.cameraX, 70 - this.cameraY, 4, 15);\n    ctx.fillRect(130 - this.cameraX, 70 - this.cameraY, 4, 15);\n    \n    ctx.fillStyle = '#FF6347'; // Red bottles\n    ctx.fillRect(140 - this.cameraX, 70 - this.cameraY, 4, 15);\n    ctx.fillRect(150 - this.cameraX, 70 - this.cameraY, 4, 15);\n    \n    // Disco ball\n    ctx.fillStyle = '#C0C0C0'; // Silver disco ball\n    ctx.beginPath();\n    ctx.arc(400 - this.cameraX, 180 - this.cameraY, 20, 0, 2 * Math.PI);\n    ctx.fill();\n    \n    // Disco ball reflection squares\n    ctx.fillStyle = '#FFFFFF';\n    for (let i = 0; i < 8; i++) {\n      const angle = (i * Math.PI) / 4;\n      const x = 400 + Math.cos(angle) * 15 - this.cameraX;\n      const y = 180 + Math.sin(angle) * 15 - this.cameraY;\n      ctx.fillRect(x - 2, y - 2, 4, 4);\n    }\n    \n    // Dance floor lighting effects\n    const time = Date.now() * 0.003;\n    const colors = ['#FF1493', '#00FFFF', '#FF4500', '#32CD32', '#9400D3', '#FFD700'];\n    \n    // Animated floor spots\n    for (let i = 0; i < 6; i++) {\n      const x = 200 + (i % 3) * 150;\n      const y = 250 + Math.floor(i / 3) * 100;\n      const colorIndex = Math.floor(time + i) % colors.length;\n      \n      ctx.fillStyle = colors[colorIndex];\n      ctx.globalAlpha = 0.3 + 0.3 * Math.sin(time * 2 + i);\n      ctx.beginPath();\n      ctx.arc(x - this.cameraX, y - this.cameraY, 30, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n    ctx.globalAlpha = 1.0;\n    \n    // Strobe light effects\n    ctx.fillStyle = '#FFFFFF';\n    ctx.globalAlpha = 0.1 + 0.1 * Math.sin(time * 10);\n    ctx.fillRect(0 - this.cameraX, 0 - this.cameraY, 800, 600);\n    ctx.globalAlpha = 1.0;\n    \n    // Neon wall decorations\n    ctx.strokeStyle = '#FF1493';\n    ctx.lineWidth = 3;\n    ctx.beginPath();\n    ctx.moveTo(100 - this.cameraX, 200 - this.cameraY);\n    ctx.lineTo(200 - this.cameraX, 180 - this.cameraY);\n    ctx.lineTo(300 - this.cameraX, 200 - this.cameraY);\n    ctx.stroke();\n    \n    ctx.strokeStyle = '#00FFFF';\n    ctx.beginPath();\n    ctx.moveTo(500 - this.cameraX, 200 - this.cameraY);\n    ctx.lineTo(600 - this.cameraX, 180 - this.cameraY);\n    ctx.lineTo(700 - this.cameraX, 200 - this.cameraY);\n    ctx.stroke();\n    \n    // Dance floor boundary/stage edge\n    ctx.fillStyle = '#FFD700';\n    ctx.fillRect(150 - this.cameraX, 240 - this.cameraY, 500, 4);\n    \n    // Sound equalizer visualization\n    ctx.fillStyle = '#00FF00';\n    for (let i = 0; i < 20; i++) {\n      const height = 20 + 40 * Math.sin(time * 5 + i * 0.5);\n      ctx.fillRect(300 + i * 10 - this.cameraX, 140 - height - this.cameraY, 8, height);\n    }\n    \n    // Entry rope/queue area\n    ctx.strokeStyle = '#8B0000';\n    ctx.lineWidth = 4;\n    ctx.beginPath();\n    ctx.moveTo(550 - this.cameraX, 380 - this.cameraY);\n    ctx.lineTo(600 - this.cameraX, 400 - this.cameraY);\n    ctx.lineTo(650 - this.cameraX, 380 - this.cameraY);\n    ctx.stroke();\n  }\n}\n\nexport default CentrosInterior;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3166, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/SceneManager.ts"],"sourcesContent":["import Player from './Player';\nimport World from './World';\nimport InputHandler from './InputHandler';\nimport BurrussInterior from './campus/BurrussInterior';\nimport NewmanInterior from './campus/NewmanInterior';\nimport TorgersenInterior from './campus/TorgersenInterior';\nimport SquiresInterior from './campus/SquiresInterior';\nimport TotsDownstairs from './off-campus/TotsDownstairs';\nimport TotsUpstairs from './off-campus/TotsUpstairs';\nimport HokieHouseInterior from './off-campus/HokieHouseInterior';\nimport CentrosInterior from './off-campus/CentrosInterior';\nimport { Scene, SceneType } from './types';\n\nclass SceneManager {\n  private currentScene: Scene;\n  private scenes: Map<SceneType, Scene> = new Map();\n  private player: Player;\n  private inputHandler: InputHandler;\n\n  constructor(player: Player, inputHandler: InputHandler) {\n    this.player = player;\n    this.inputHandler = inputHandler;\n    this.initializeScenes();\n    this.currentScene = this.scenes.get('campus')!;\n  }\n\n  private initializeScenes(): void {\n    // Campus (outdoor world)\n    this.scenes.set('campus', new World());\n    \n    // Campus building interiors\n    this.scenes.set('burruss', new BurrussInterior());\n    this.scenes.set('newman', new NewmanInterior());\n    this.scenes.set('torgersen', new TorgersenInterior());\n    this.scenes.set('squires', new SquiresInterior());\n    \n    // Off-campus restaurant interiors\n    this.scenes.set('tots', new TotsInterior());\n    this.scenes.set('tots_upstairs', new TotsUpstairs());\n    this.scenes.set('hokiehouse', new HokieHouseInterior());\n    this.scenes.set('centros', new CentrosInterior());\n  }\n\n  public getCurrentScene(): Scene {\n    return this.currentScene;\n  }\n\n  public getCurrentSceneType(): SceneType {\n    return this.currentScene.type;\n  }\n\n  public switchScene(newSceneType: SceneType, entranceX?: number, entranceY?: number): void {\n    const newScene = this.scenes.get(newSceneType);\n    if (!newScene) {\n      console.warn(`Scene ${newSceneType} not found`);\n      return;\n    }\n\n    const oldSceneType = this.currentScene.type;\n    this.currentScene = newScene;\n\n    // Position player at entrance or default position\n    if (entranceX !== undefined && entranceY !== undefined) {\n      this.player.x = entranceX;\n      this.player.y = entranceY;\n      console.log(`Switched from ${oldSceneType} to ${newSceneType} scene with position (${entranceX}, ${entranceY})`);\n    } else if (newScene.getEntrancePosition) {\n      const entrance = newScene.getEntrancePosition();\n      this.player.x = entrance.x;\n      this.player.y = entrance.y;\n      console.log(`Switched from ${oldSceneType} to ${newSceneType} scene with entrance position (${entrance.x}, ${entrance.y})`);\n    } else {\n      console.log(`Switched from ${oldSceneType} to ${newSceneType} scene - no position change`);\n    }\n  }\n\n  public checkForSceneTransition(): void {\n    // Check for ESC key to exit buildings\n    const escPressed = this.inputHandler.wasKeyJustPressed('Escape');\n    \n    if (escPressed) {\n      const currentSceneType = this.currentScene.type;\n      console.log('ESC pressed! Current scene:', currentSceneType);\n      \n      if (currentSceneType !== 'campus') {\n        console.log('Exiting building to campus');\n        this.exitToOutside();\n        return;\n      } else {\n        console.log('Already on campus - ESC has no effect');\n      }\n    }\n\n    // Check if player is near a door on campus\n    if (this.currentScene.type === 'campus') {\n      this.checkBuildingEntrance();\n    } else {\n      // Check if player is near exit in building\n      this.checkBuildingExit();\n      // Check for stair transitions in buildings\n      this.checkStairTransition();\n    }\n  }\n\n  private checkBuildingEntrance(): void {\n    const world = this.currentScene as World;\n    const playerTileX = Math.floor(this.player.x / 32);\n    const playerTileY = Math.floor(this.player.y / 32);\n\n    // Only check the exact tile the player is standing on for doors\n    const tile = world.getTileAt && world.getTileAt(playerTileX, playerTileY);\n    if (tile && tile.type === 'door') {\n      const buildingType = tile.buildingType;\n      console.log('🚪 Found door! Building type:', buildingType, 'at tile:', {playerTileX, playerTileY});\n      \n      if (buildingType && this.scenes.has(buildingType as SceneType)) {\n        console.log('✅ Entering building:', buildingType);\n        this.switchScene(buildingType as SceneType);\n        return;\n      } else {\n        console.log('❌ Building type not recognized:', buildingType, 'Available scenes:', Array.from(this.scenes.keys()));\n      }\n    }\n  }\n\n  private checkStairTransition(): void {\n    // Check if player is on stairs in any building\n    const currentScene = this.currentScene as any;\n    if (currentScene.tiles) {\n      const playerTileX = Math.floor(this.player.x / 32);\n      const playerTileY = Math.floor(this.player.y / 32);\n      \n      // Check bounds\n      if (playerTileX >= 0 && playerTileX < (currentScene.buildingWidth || currentScene.areaWidth) &&\n          playerTileY >= 0 && playerTileY < (currentScene.buildingHeight || currentScene.areaHeight)) {\n        \n        const tile = currentScene.tiles[playerTileY] && currentScene.tiles[playerTileY][playerTileX];\n        \n        if (tile && tile.type === 'stairs') {\n          console.log('🪜 Found stairs! Current scene:', this.currentScene.type);\n          \n          // Handle specific stair transitions\n          if (this.currentScene.type === 'tots') {\n            console.log('✅ Going upstairs to tots_upstairs');\n            this.switchScene('tots_upstairs');\n          } else if (this.currentScene.type === 'tots_upstairs') {\n            console.log('✅ Going downstairs to tots');\n            this.switchScene('tots');\n          }\n        }\n      }\n    }\n  }\n\n  private checkBuildingExit(): void {\n    const exitInfo = this.currentScene.getExitPosition?.();\n    if (exitInfo) {\n      const distance = Math.sqrt(\n        Math.pow(this.player.x - exitInfo.x, 2) + \n        Math.pow(this.player.y - exitInfo.y, 2)\n      );\n      \n      // If player is close to exit\n      if (distance < 30) {\n        // Switch back to campus and position player outside the building\n        this.switchScene(exitInfo.scene, exitInfo.x, exitInfo.y);\n      }\n    }\n  }\n\n  private exitToOutside(): void {\n    // Exit building and return to campus\n    // Position player at a default campus location\n    this.switchScene('campus', 400, 912); // Campus center\n    console.log('Exited building with ESC key');\n  }\n\n  public render(ctx: CanvasRenderingContext2D): void {\n    this.currentScene.render(ctx, this.player);\n  }\n\n  public update(deltaTime: number): void {\n    this.currentScene.update(deltaTime);\n    this.checkForSceneTransition();\n  }\n\n  public canMoveTo(x: number, y: number, width: number, height: number): boolean {\n    return this.currentScene.canMoveTo(x, y, width, height);\n  }\n\n  public getCameraPosition(): { x: number, y: number } {\n    return {\n      x: this.currentScene.cameraX || 0,\n      y: this.currentScene.cameraY || 0\n    };\n  }\n}\n\nexport default SceneManager;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3346, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/GameEngine.ts"],"sourcesContent":["import Player from './Player';\nimport World from './World';\nimport InputHandler from './InputHandler';\nimport SceneManager from './SceneManager';\n\nclass GameEngine {\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n  private player: Player;\n  private sceneManager: SceneManager;\n  private inputHandler: InputHandler;\n  private lastTime: number = 0;\n  private animationFrameId: number | null = null;\n  private isRunning: boolean = false;\n\n  constructor(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    \n    // Initialize game objects\n    this.player = new Player(400, 912); // Starting position in campus area (608 + 304)\n    this.inputHandler = new InputHandler();\n    this.sceneManager = new SceneManager(this.player, this.inputHandler);\n    \n    // Bind the game loop\n    this.gameLoop = this.gameLoop.bind(this);\n  }\n\n  start(): void {\n    this.isRunning = true;\n    this.lastTime = performance.now();\n    this.gameLoop(this.lastTime);\n  }\n\n  stop(): void {\n    this.isRunning = false;\n    if (this.animationFrameId) {\n      cancelAnimationFrame(this.animationFrameId);\n    }\n    // Clean up input handler\n    this.inputHandler.destroy();\n  }\n\n  private gameLoop(currentTime: number): void {\n    if (!this.isRunning) return;\n\n    const deltaTime = currentTime - this.lastTime;\n    this.lastTime = currentTime;\n\n    // Update\n    this.update(deltaTime);\n    \n    // Render\n    this.render();\n\n    // Continue loop\n    this.animationFrameId = requestAnimationFrame(this.gameLoop);\n  }\n\n  private update(deltaTime: number): void {\n    // Check scene transitions BEFORE clearing input state\n    this.sceneManager.update(deltaTime);\n    \n    // Update input (this clears keyPressed state)\n    this.inputHandler.update();\n    \n    // Update player\n    this.player.update(deltaTime, this.inputHandler, this.sceneManager.getCurrentScene());\n  }\n\n  private render(): void {\n    // Clear canvas\n    this.ctx.fillStyle = '#2a4d3a'; // Dark green background\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    // Render current scene\n    this.sceneManager.render(this.ctx);\n    \n    // Render player\n    const cameraPos = this.sceneManager.getCameraPosition();\n    this.player.render(this.ctx, cameraPos.x, cameraPos.y);\n    \n    // Render UI\n    this.renderUI();\n  }\n\n  private renderUI(): void {\n    // Render simple UI elements\n    this.ctx.fillStyle = 'white';\n    this.ctx.font = '12px monospace';\n    this.ctx.fillText(`Position: (${Math.floor(this.player.x)}, ${Math.floor(this.player.y)})`, 10, 20);\n    const cameraPos = this.sceneManager.getCameraPosition();\n    this.ctx.fillText(`Camera: (${Math.floor(cameraPos.x)}, ${Math.floor(cameraPos.y)})`, 10, 40);\n    this.ctx.fillText(`Scene: ${this.sceneManager.getCurrentSceneType()}`, 10, 60);\n    \n    // Show entrance instructions when near door\n    if (this.sceneManager.getCurrentSceneType() === 'campus') {\n      this.ctx.fillStyle = '#FF8C00';\n      this.ctx.font = '10px monospace';\n      this.ctx.fillText('Stand directly on building doors to enter!', 10, 580);\n    } else {\n      this.ctx.fillStyle = '#32CD32';\n      this.ctx.font = '10px monospace';\n      this.ctx.fillText('Walk to green EXIT area to leave building', 10, 580);\n    }\n  }\n}\n\nexport default GameEngine;\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;;;;AAEA,MAAM;IACI,OAA0B;IAC1B,IAA8B;IAC9B,OAAe;IACf,aAA2B;IAC3B,aAA2B;IAC3B,WAAmB,EAAE;IACrB,mBAAkC,KAAK;IACvC,YAAqB,MAAM;IAEnC,YAAY,MAAyB,EAAE,GAA6B,CAAE;QACpE,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,GAAG,GAAG;QAEX,0BAA0B;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,sIAAM,CAAC,KAAK,MAAM,+CAA+C;QACnF,IAAI,CAAC,YAAY,GAAG,IAAI,4IAAY;QACpC,IAAI,CAAC,YAAY,GAAG,IAAI,4IAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY;QAEnE,qBAAqB;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI;IACzC;IAEA,QAAc;QACZ,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,QAAQ,GAAG,YAAY,GAAG;QAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ;IAC7B;IAEA,OAAa;QACX,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,qBAAqB,IAAI,CAAC,gBAAgB;QAC5C;QACA,yBAAyB;QACzB,IAAI,CAAC,YAAY,CAAC,OAAO;IAC3B;IAEQ,SAAS,WAAmB,EAAQ;QAC1C,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;QAErB,MAAM,YAAY,cAAc,IAAI,CAAC,QAAQ;QAC7C,IAAI,CAAC,QAAQ,GAAG;QAEhB,SAAS;QACT,IAAI,CAAC,MAAM,CAAC;QAEZ,SAAS;QACT,IAAI,CAAC,MAAM;QAEX,gBAAgB;QAChB,IAAI,CAAC,gBAAgB,GAAG,sBAAsB,IAAI,CAAC,QAAQ;IAC7D;IAEQ,OAAO,SAAiB,EAAQ;QACtC,sDAAsD;QACtD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;QAEzB,8CAA8C;QAC9C,IAAI,CAAC,YAAY,CAAC,MAAM;QAExB,gBAAgB;QAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,eAAe;IACpF;IAEQ,SAAe;QACrB,eAAe;QACf,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,WAAW,wBAAwB;QACxD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;QAE7D,uBAAuB;QACvB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG;QAEjC,gBAAgB;QAChB,MAAM,YAAY,IAAI,CAAC,YAAY,CAAC,iBAAiB;QACrD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC;QAErD,YAAY;QACZ,IAAI,CAAC,QAAQ;IACf;IAEQ,WAAiB;QACvB,4BAA4B;QAC5B,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG;QACrB,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG;QAChB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI;QAChG,MAAM,YAAY,IAAI,CAAC,YAAY,CAAC,iBAAiB;QACrD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,KAAK,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,KAAK,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI;QAC1F,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,mBAAmB,IAAI,EAAE,IAAI;QAE3E,4CAA4C;QAC5C,IAAI,IAAI,CAAC,YAAY,CAAC,mBAAmB,OAAO,UAAU;YACxD,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG;YACrB,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG;YAChB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,8CAA8C,IAAI;QACtE,OAAO;YACL,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG;YACrB,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG;YAChB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,6CAA6C,IAAI;QACrE;IACF;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 3444, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/components/Game.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useRef, useState } from 'react';\nimport GameEngine from './GameEngine';\n\nconst Game: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const gameEngineRef = useRef<GameEngine | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    if (canvasRef.current && !gameEngineRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      \n      if (ctx) {\n        // Set canvas size\n        canvas.width = 800;\n        canvas.height = 600;\n        \n        // Enable pixel-perfect rendering\n        ctx.imageSmoothingEnabled = false;\n        \n        // Initialize game engine\n        gameEngineRef.current = new GameEngine(canvas, ctx);\n        gameEngineRef.current.start();\n        setIsLoaded(true);\n        \n        // Focus canvas for keyboard input\n        canvas.focus();\n      }\n    }\n\n    return () => {\n      if (gameEngineRef.current) {\n        gameEngineRef.current.stop();\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"relative game-ui\">\n      <canvas\n        ref={canvasRef}\n        className=\"pixel-border pixelated\"\n        tabIndex={0}\n        style={{\n          imageRendering: 'pixelated',\n          outline: 'none',\n        }}\n        onFocus={() => console.log('Canvas focused - keyboard controls active')}\n      />\n      {!isLoaded && (\n        <div className=\"absolute inset-0 flex items-center justify-center loading-screen text-white\">\n          <div className=\"text-center\">\n            <div className=\"text-xl mb-2\">LOADING...</div>\n            <div className=\"text-sm\">Initializing pixel world...</div>\n          </div>\n        </div>\n      )}\n      <div className=\"mt-4 text-white text-center game-ui\">\n        <div className=\"bg-black bg-opacity-80 p-4 rounded border border-white inline-block\">\n          <p className=\"text-sm mb-1\">🎮 VIRGINIA TECH CAMPUS</p>\n          <p className=\"text-xs\">WASD or Arrow Keys to move around campus</p>\n          <p className=\"text-xs\">Explore Burruss Hall, Newman Library & more!</p>\n          <p className=\"text-xs mt-2\">Click canvas first, then use keyboard</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,OAAiB;IACrB,MAAM,YAAY,IAAA,8UAAM,EAAoB;IAC5C,MAAM,gBAAgB,IAAA,8UAAM,EAAoB;IAChD,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,gVAAQ,EAAC;IAEzC,IAAA,iVAAS,EAAC;QACR,IAAI,UAAU,OAAO,IAAI,CAAC,cAAc,OAAO,EAAE;YAC/C,MAAM,SAAS,UAAU,OAAO;YAChC,MAAM,MAAM,OAAO,UAAU,CAAC;YAE9B,IAAI,KAAK;gBACP,kBAAkB;gBAClB,OAAO,KAAK,GAAG;gBACf,OAAO,MAAM,GAAG;gBAEhB,iCAAiC;gBACjC,IAAI,qBAAqB,GAAG;gBAE5B,yBAAyB;gBACzB,cAAc,OAAO,GAAG,IAAI,0IAAU,CAAC,QAAQ;gBAC/C,cAAc,OAAO,CAAC,KAAK;gBAC3B,YAAY;gBAEZ,kCAAkC;gBAClC,OAAO,KAAK;YACd;QACF;QAEA,OAAO;YACL,IAAI,cAAc,OAAO,EAAE;gBACzB,cAAc,OAAO,CAAC,IAAI;YAC5B;QACF;IACF,GAAG,EAAE;IAEL,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBACC,KAAK;gBACL,WAAU;gBACV,UAAU;gBACV,OAAO;oBACL,gBAAgB;oBAChB,SAAS;gBACX;gBACA,SAAS,IAAM,QAAQ,GAAG,CAAC;;;;;;YAE5B,CAAC,0BACA,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAI,WAAU;;sCACb,6WAAC;4BAAI,WAAU;sCAAe;;;;;;sCAC9B,6WAAC;4BAAI,WAAU;sCAAU;;;;;;;;;;;;;;;;;0BAI/B,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAI,WAAU;;sCACb,6WAAC;4BAAE,WAAU;sCAAe;;;;;;sCAC5B,6WAAC;4BAAE,WAAU;sCAAU;;;;;;sCACvB,6WAAC;4BAAE,WAAU;sCAAU;;;;;;sCACvB,6WAAC;4BAAE,WAAU;sCAAe;;;;;;;;;;;;;;;;;;;;;;;AAKtC;uCAEe","debugId":null}},
    {"offset": {"line": 3592, "column": 0}, "map": {"version":3,"sources":["file:///Users/DohhyunOh/Documents/foodiverse/frontend/app/page.tsx"],"sourcesContent":["'use client';\n\nimport Game from './components/Game';\n\nexport default function Home() {\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-black\">\n      <Game />\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,6WAAC;QAAI,WAAU;kBACb,cAAA,6WAAC,qIAAI;;;;;;;;;;AAGX","debugId":null}}]
}